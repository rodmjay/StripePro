@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject IAccessTokenProvider TokenProvider
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<div class="bg-light" id="sidebar-wrapper">
    <div class="top-row ps-3 navbar navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="">BlazorApp1</a>
            <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>
    </div>
    <div class="menu list-group list-group-flush">
        <AuthorizeView>
            <Authorized>
                <NavLink class="list-group-item list-group-item-action bg-light" href="/"
                         Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </Authorized>
        </AuthorizeView>
        <AuthorizeView Policy="@TranslationPro.Shared.Policies.Policies.CanAccessApis">
            <NavLink class="list-group-item list-group-item-action bg-light" href="applications">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Applications
            </NavLink>
        </AuthorizeView>
        <AuthorizeView>
            <Authorized>
                <NavLink class="list-group-item list-group-item-action bg-light"
                         href="/employeeedit">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Add new employee
                </NavLink>
                <button class="list-group-item list-group-item-action bg-light"
                @onclick="BeginSignOut">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Log out
                    (@context.User.Identity.Name)
                </button>

                <button class="list-group-item list-group-item-action bg-light"
                @onclick="WriteToken">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Write token
                </button>
            </Authorized>
            <NotAuthorized>
                <NavLink class="list-group-item list-group-item-action bg-light"
                         href="authentication/login">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Log in
                </NavLink>
                <NavLink class="list-group-item list-group-item-action bg-light"
                         href="https://localhost:44319/Identity/Account/Register">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Register
                </NavLink>
            </NotAuthorized>
        </AuthorizeView>

    </div>
</div>


@code {
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private async Task WriteToken()
    {
        var tokenResult = await TokenProvider.RequestAccessToken();
        if (tokenResult.TryGetToken(out var token))
        {
            System.Diagnostics.Debug.WriteLine(token.Value);
        }
    }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

}
