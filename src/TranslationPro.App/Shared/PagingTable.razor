@typeparam TItem
@using TranslationPro.Shared.Common

<ul class="pagination mt-3">
    <li class="page-item @(PagedList.CurrentPage == 1 ? "disabled" : "")">
        <button class="page-link" @onclick="()=>ChangePage(PagedList.CurrentPage-1)">Previous</button>
    </li>
    @for (int i = 1; i <= PagedList.TotalPages; i++)
    {
        var local = i;
        <li class="page-item @(PagedList.CurrentPage == i ? "active" : "")">
            <button class="page-link" @onclick="(()=>ChangePage(local))">@local</button>
        </li>
    }
    <li class="page-item @(PagedList.CurrentPage == PagedList.TotalPages ? "disabled" : "")">
        <button class="page-link" @onclick="()=>ChangePage(PagedList.CurrentPage+1)">Next</button>
    </li>
</ul>

<CommonTable Items="PagedList.Items">
    <HeaderTemplate>
        @HeaderTemplate
    </HeaderTemplate>
    <ItemTemplate>
        @ItemTemplate(context)
    </ItemTemplate>
</CommonTable>

@code {

    [Parameter]
    public EventCallback<int> PageChanged { get; set; }

    [Parameter]
    public PagedList<TItem> PagedList { get; set; }

    [Parameter]
    public RenderFragment HeaderTemplate { get; set; }

    [Parameter]
    public RenderFragment<TItem> ItemTemplate { get; set; }

    public void ChangePage(int page)
    {
        PageChanged.InvokeAsync(page);
    }

}
