@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Configuration
@inject IAccessTokenProvider TokenProvider
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject IConfiguration Configuration





<div class="nav-item dropdown d-inline-block mx-2">
    
    <AuthorizeView>
        <Authorized>
            
            <a class="text-white dropdown-toggle" href="https://localhost:44319/Account/Manage" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @context.User.Identity?.Name
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                @*<a class="dropdown-item" href="#">Item</a>
                        <a class="dropdown-item" href="#">Item</a>*@
                @*<div class="dropdown-divider"></div>*@
                <form method="post" action="https://localhost:44319/Account/LogOut">
                    <button type="submit" class="ss-manage-nav-link nav-link btn btn-link">
                        <i data-feather="log-out"></i>
                        <span>
                            Log Out
                        </span>
                    </button>
                </form>
            </div>
        </Authorized>
        <NotAuthorized>
            <NavLink class="text-white"
                href="https://localhost:44319/Identity/Account/Register">
                Register
            </NavLink>
            <NavLink class="text-white" href="authentication/login">
                Log in
            </NavLink>
        </NotAuthorized>
    </AuthorizeView>
    

</div>

@code {
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private async Task WriteToken()
    {
        var tokenResult = await TokenProvider.RequestAccessToken();
        if (tokenResult.TryGetToken(out var token))
        {
            System.Diagnostics.Debug.WriteLine(token.Value);
        }
    }


}