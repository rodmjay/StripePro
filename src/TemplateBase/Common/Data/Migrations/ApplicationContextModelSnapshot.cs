// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TranslationPro.Base.Common.Data.Contexts;

namespace TemplateBase.Common.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowedAccessTokenSigningAlgorithms")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastAccessed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("NonEditable")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInDiscoveryDocument")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ApiResource", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiResourceClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApiResourceId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ApiResourceId");

                    b.ToTable("ApiResourceClaim", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiResourceProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApiResourceId")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("ApiResourceId");

                    b.ToTable("ApiResourceProperty", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiResourceScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApiResourceId")
                        .HasColumnType("int");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ApiResourceId");

                    b.ToTable("ApiResourceScope", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiResourceSecret", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApiResourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("ApiResourceId");

                    b.ToTable("ApiResourceSecret", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Emphasize")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInDiscoveryDocument")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ApiScope", "IdentityServer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayName = "My API",
                            Emphasize = false,
                            Enabled = true,
                            Name = "api1",
                            Required = false,
                            ShowInDiscoveryDocument = true
                        });
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiScopeClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ScopeId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ScopeId");

                    b.ToTable("ApiScopeClaim", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiScopeProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ScopeId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("ScopeId");

                    b.ToTable("ApiScopeProperty", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AbsoluteRefreshTokenLifetime")
                        .HasColumnType("int");

                    b.Property<int>("AccessTokenLifetime")
                        .HasColumnType("int");

                    b.Property<int>("AccessTokenType")
                        .HasColumnType("int");

                    b.Property<bool>("AllowAccessTokensViaBrowser")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowOfflineAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPlainTextPkce")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowRememberConsent")
                        .HasColumnType("bit");

                    b.Property<string>("AllowedIdentityTokenSigningAlgorithms")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AlwaysIncludeUserClaimsInIdToken")
                        .HasColumnType("bit");

                    b.Property<bool>("AlwaysSendClientClaims")
                        .HasColumnType("bit");

                    b.Property<int>("AuthorizationCodeLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("BackChannelLogoutSessionRequired")
                        .HasColumnType("bit");

                    b.Property<string>("BackChannelLogoutUri")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ClientClaimsPrefix")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientUri")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("ConsentLifetime")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("DeviceCodeLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("EnableLocalLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FrontChannelLogoutSessionRequired")
                        .HasColumnType("bit");

                    b.Property<string>("FrontChannelLogoutUri")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("IdentityTokenLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("IncludeJwtId")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastAccessed")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoUri")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("NonEditable")
                        .HasColumnType("bit");

                    b.Property<string>("PairWiseSubjectSalt")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProtocolType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RefreshTokenExpiration")
                        .HasColumnType("int");

                    b.Property<int>("RefreshTokenUsage")
                        .HasColumnType("int");

                    b.Property<bool>("RequireClientSecret")
                        .HasColumnType("bit");

                    b.Property<bool>("RequireConsent")
                        .HasColumnType("bit");

                    b.Property<bool>("RequirePkce")
                        .HasColumnType("bit");

                    b.Property<bool>("RequireRequestObject")
                        .HasColumnType("bit");

                    b.Property<int>("SlidingRefreshTokenLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("UpdateAccessTokenClaimsOnRefresh")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCodeType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserSsoLifetime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Client", "IdentityServer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AbsoluteRefreshTokenLifetime = 2592000,
                            AccessTokenLifetime = 400000,
                            AccessTokenType = 0,
                            AllowAccessTokensViaBrowser = false,
                            AllowOfflineAccess = false,
                            AllowPlainTextPkce = false,
                            AllowRememberConsent = true,
                            AlwaysIncludeUserClaimsInIdToken = true,
                            AlwaysSendClientClaims = true,
                            AuthorizationCodeLifetime = 300,
                            BackChannelLogoutSessionRequired = true,
                            ClientClaimsPrefix = "",
                            ClientId = "postman",
                            Created = new DateTime(2021, 9, 18, 13, 12, 13, 532, DateTimeKind.Unspecified).AddTicks(8105),
                            DeviceCodeLifetime = 300,
                            EnableLocalLogin = true,
                            Enabled = true,
                            FrontChannelLogoutSessionRequired = true,
                            IdentityTokenLifetime = 300,
                            IncludeJwtId = true,
                            NonEditable = false,
                            ProtocolType = "oidc",
                            RefreshTokenExpiration = 1,
                            RefreshTokenUsage = 1,
                            RequireClientSecret = true,
                            RequireConsent = false,
                            RequirePkce = true,
                            RequireRequestObject = false,
                            SlidingRefreshTokenLifetime = 1296000,
                            UpdateAccessTokenClaimsOnRefresh = false
                        },
                        new
                        {
                            Id = 2,
                            AbsoluteRefreshTokenLifetime = 2592000,
                            AccessTokenLifetime = 3600,
                            AccessTokenType = 0,
                            AllowAccessTokensViaBrowser = false,
                            AllowOfflineAccess = false,
                            AllowPlainTextPkce = false,
                            AllowRememberConsent = true,
                            AlwaysIncludeUserClaimsInIdToken = true,
                            AlwaysSendClientClaims = true,
                            AuthorizationCodeLifetime = 300,
                            BackChannelLogoutSessionRequired = true,
                            ClientClaimsPrefix = "client_",
                            ClientId = "client",
                            Created = new DateTime(2021, 9, 18, 13, 12, 13, 642, DateTimeKind.Unspecified).AddTicks(7421),
                            DeviceCodeLifetime = 300,
                            EnableLocalLogin = true,
                            Enabled = true,
                            FrontChannelLogoutSessionRequired = true,
                            IdentityTokenLifetime = 300,
                            IncludeJwtId = true,
                            NonEditable = false,
                            ProtocolType = "oidc",
                            RefreshTokenExpiration = 1,
                            RefreshTokenUsage = 1,
                            RequireClientSecret = true,
                            RequireConsent = false,
                            RequirePkce = true,
                            RequireRequestObject = false,
                            SlidingRefreshTokenLifetime = 1296000,
                            UpdateAccessTokenClaimsOnRefresh = false
                        },
                        new
                        {
                            Id = 3,
                            AbsoluteRefreshTokenLifetime = 2592000,
                            AccessTokenLifetime = 3600,
                            AccessTokenType = 0,
                            AllowAccessTokensViaBrowser = false,
                            AllowOfflineAccess = false,
                            AllowPlainTextPkce = false,
                            AllowRememberConsent = true,
                            AlwaysIncludeUserClaimsInIdToken = true,
                            AlwaysSendClientClaims = true,
                            AuthorizationCodeLifetime = 300,
                            BackChannelLogoutSessionRequired = true,
                            ClientClaimsPrefix = "client_",
                            ClientId = "mvc",
                            Created = new DateTime(2021, 9, 18, 13, 12, 13, 645, DateTimeKind.Unspecified).AddTicks(5968),
                            DeviceCodeLifetime = 300,
                            EnableLocalLogin = true,
                            Enabled = true,
                            FrontChannelLogoutSessionRequired = true,
                            IdentityTokenLifetime = 300,
                            IncludeJwtId = true,
                            NonEditable = false,
                            ProtocolType = "oidc",
                            RefreshTokenExpiration = 1,
                            RefreshTokenUsage = 1,
                            RequireClientSecret = true,
                            RequireConsent = false,
                            RequirePkce = true,
                            RequireRequestObject = false,
                            SlidingRefreshTokenLifetime = 1296000,
                            UpdateAccessTokenClaimsOnRefresh = false
                        },
                        new
                        {
                            Id = 4,
                            AbsoluteRefreshTokenLifetime = 2592000,
                            AccessTokenLifetime = 3600,
                            AccessTokenType = 0,
                            AllowAccessTokensViaBrowser = false,
                            AllowOfflineAccess = false,
                            AllowPlainTextPkce = false,
                            AllowRememberConsent = true,
                            AlwaysIncludeUserClaimsInIdToken = true,
                            AlwaysSendClientClaims = false,
                            AuthorizationCodeLifetime = 300,
                            BackChannelLogoutSessionRequired = true,
                            ClientClaimsPrefix = "client_",
                            ClientId = "js",
                            ClientName = "JavaScript Client",
                            Created = new DateTime(2021, 9, 18, 13, 12, 13, 653, DateTimeKind.Unspecified).AddTicks(7956),
                            DeviceCodeLifetime = 300,
                            EnableLocalLogin = true,
                            Enabled = true,
                            FrontChannelLogoutSessionRequired = true,
                            IdentityTokenLifetime = 300,
                            IncludeJwtId = true,
                            NonEditable = false,
                            ProtocolType = "oidc",
                            RefreshTokenExpiration = 1,
                            RefreshTokenUsage = 1,
                            RequireClientSecret = false,
                            RequireConsent = false,
                            RequirePkce = true,
                            RequireRequestObject = false,
                            SlidingRefreshTokenLifetime = 1296000,
                            UpdateAccessTokenClaimsOnRefresh = false
                        });
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientClaim", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientCorsOrigin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientCorsOrigin", "IdentityServer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 4,
                            Origin = "https://localhost:5003"
                        });
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientGrantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("GrantType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientGrantType", "IdentityServer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            GrantType = "password"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 4,
                            GrantType = "authorization_code"
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 2,
                            GrantType = "client_credentials"
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 3,
                            GrantType = "authorization_code"
                        });
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientIdPRestriction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientIdPRestriction", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientPostLogoutRedirectUri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("PostLogoutRedirectUri")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientPostLogoutRedirectUri", "IdentityServer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 3,
                            PostLogoutRedirectUri = "https://localhost:5002/signout-callback-oidc"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 4,
                            PostLogoutRedirectUri = "https://localhost:5003/index.html"
                        });
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientProperty", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientRedirectUri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("RedirectUri")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientRedirectUri", "IdentityServer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 3,
                            RedirectUri = "https://localhost:5002/signin-oidc"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 4,
                            RedirectUri = "https://localhost:5003/callback.html"
                        });
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientScopes", "IdentityServer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 3,
                            Scope = "openid"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            Scope = "api1"
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            Scope = "api1"
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 1,
                            Scope = "api1"
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 1,
                            Scope = "profile"
                        },
                        new
                        {
                            Id = 6,
                            ClientId = 1,
                            Scope = "openid"
                        },
                        new
                        {
                            Id = 7,
                            ClientId = 4,
                            Scope = "openid"
                        },
                        new
                        {
                            Id = 8,
                            ClientId = 4,
                            Scope = "profile"
                        },
                        new
                        {
                            Id = 9,
                            ClientId = 4,
                            Scope = "api1"
                        },
                        new
                        {
                            Id = 10,
                            ClientId = 3,
                            Scope = "profile"
                        });
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientSecret", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientSecret", "IdentityServer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Created = new DateTime(2021, 9, 17, 13, 19, 6, 414, DateTimeKind.Unspecified).AddTicks(3771),
                            Type = "SharedSecret",
                            Value = "K7gNU3sdo+OL0wNhqoVWhr3g6s1xYv72ol/pe/Unols="
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            Created = new DateTime(2021, 9, 17, 13, 19, 6, 564, DateTimeKind.Unspecified).AddTicks(8731),
                            Type = "SharedSecret",
                            Value = "K7gNU3sdo+OL0wNhqoVWhr3g6s1xYv72ol/pe/Unols="
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            Created = new DateTime(2021, 9, 17, 13, 19, 6, 568, DateTimeKind.Unspecified).AddTicks(1345),
                            Type = "SharedSecret",
                            Value = "K7gNU3sdo+OL0wNhqoVWhr3g6s1xYv72ol/pe/Unols="
                        });
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceFlowCodes", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.IdentityResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Emphasize")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("NonEditable")
                        .HasColumnType("bit");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInDiscoveryDocument")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("IdentityResource", "IdentityServer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2021, 9, 17, 3, 58, 20, 206, DateTimeKind.Unspecified).AddTicks(3232),
                            Description = "Your user profile information (first name, last name, etc.)",
                            DisplayName = "User profile",
                            Emphasize = true,
                            Enabled = true,
                            Name = "profile",
                            NonEditable = false,
                            Required = false,
                            ShowInDiscoveryDocument = true
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2021, 9, 17, 3, 58, 20, 185, DateTimeKind.Unspecified).AddTicks(7082),
                            DisplayName = "Your user identifier",
                            Emphasize = false,
                            Enabled = true,
                            Name = "openid",
                            NonEditable = false,
                            Required = true,
                            ShowInDiscoveryDocument = true
                        });
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.IdentityResourceClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdentityResourceId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityResourceId");

                    b.ToTable("IdentityResourceClaim", "IdentityServer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdentityResourceId = 1,
                            Type = "website"
                        },
                        new
                        {
                            Id = 2,
                            IdentityResourceId = 1,
                            Type = "picture"
                        },
                        new
                        {
                            Id = 3,
                            IdentityResourceId = 1,
                            Type = "profile"
                        },
                        new
                        {
                            Id = 4,
                            IdentityResourceId = 1,
                            Type = "preferred_username"
                        },
                        new
                        {
                            Id = 5,
                            IdentityResourceId = 1,
                            Type = "nickname"
                        },
                        new
                        {
                            Id = 6,
                            IdentityResourceId = 1,
                            Type = "middle_name"
                        },
                        new
                        {
                            Id = 7,
                            IdentityResourceId = 1,
                            Type = "given_name"
                        },
                        new
                        {
                            Id = 8,
                            IdentityResourceId = 1,
                            Type = "family_name"
                        },
                        new
                        {
                            Id = 9,
                            IdentityResourceId = 1,
                            Type = "name"
                        },
                        new
                        {
                            Id = 10,
                            IdentityResourceId = 1,
                            Type = "gender"
                        },
                        new
                        {
                            Id = 11,
                            IdentityResourceId = 1,
                            Type = "birthdate"
                        },
                        new
                        {
                            Id = 12,
                            IdentityResourceId = 1,
                            Type = "zoneinfo"
                        },
                        new
                        {
                            Id = 13,
                            IdentityResourceId = 1,
                            Type = "locale"
                        },
                        new
                        {
                            Id = 14,
                            IdentityResourceId = 1,
                            Type = "updated_at"
                        },
                        new
                        {
                            Id = 15,
                            IdentityResourceId = 2,
                            Type = "sub"
                        });
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.IdentityResourceProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdentityResourceId")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityResourceId");

                    b.ToTable("IdentityResourceProperty", "IdentityServer");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants", "IdentityServer");
                });

            modelBuilder.Entity("TemplateBase.Currencies.Entities.Currency", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Decimals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Code = "AED",
                            Decimals = "2",
                            Name = "United Arab Emirates dirham",
                            Number = "784"
                        },
                        new
                        {
                            Code = "AFN",
                            Decimals = "2",
                            Name = "Afghan afghani",
                            Number = "971"
                        },
                        new
                        {
                            Code = "ALL",
                            Decimals = "2",
                            Name = "Albanian lek",
                            Number = "8"
                        },
                        new
                        {
                            Code = "AMD",
                            Decimals = "2",
                            Name = "Armenian dram",
                            Number = "51"
                        },
                        new
                        {
                            Code = "ANG",
                            Decimals = "2",
                            Name = "Netherlands Antillean guilder",
                            Number = "532"
                        },
                        new
                        {
                            Code = "AOA",
                            Decimals = "2",
                            Name = "Angolan kwanza",
                            Number = "973"
                        },
                        new
                        {
                            Code = "ARS",
                            Decimals = "2",
                            Name = "Argentine peso",
                            Number = "32"
                        },
                        new
                        {
                            Code = "AUD",
                            Decimals = "2",
                            Name = "Australian dollar",
                            Number = "36"
                        },
                        new
                        {
                            Code = "AWG",
                            Decimals = "2",
                            Name = "Aruban florin",
                            Number = "533"
                        },
                        new
                        {
                            Code = "AZN",
                            Decimals = "2",
                            Name = "Azerbaijani manat",
                            Number = "944"
                        },
                        new
                        {
                            Code = "BAM",
                            Decimals = "2",
                            Name = "Bosnia and Herzegovina convertible mark",
                            Number = "977"
                        },
                        new
                        {
                            Code = "BBD",
                            Decimals = "2",
                            Name = "Barbados dollar",
                            Number = "52"
                        },
                        new
                        {
                            Code = "BDT",
                            Decimals = "2",
                            Name = "Bangladeshi taka",
                            Number = "50"
                        },
                        new
                        {
                            Code = "BGN",
                            Decimals = "2",
                            Name = "Bulgarian lev",
                            Number = "975"
                        },
                        new
                        {
                            Code = "BHD",
                            Decimals = "3",
                            Name = "Bahraini dinar",
                            Number = "48"
                        },
                        new
                        {
                            Code = "BIF",
                            Decimals = "0",
                            Name = "Burundian franc",
                            Number = "108"
                        },
                        new
                        {
                            Code = "BMD",
                            Decimals = "2",
                            Name = "Bermudian dollar (customarily known as Bermuda dollar)",
                            Number = "60"
                        },
                        new
                        {
                            Code = "BND",
                            Decimals = "2",
                            Name = "Brunei dollar",
                            Number = "96"
                        },
                        new
                        {
                            Code = "BOB",
                            Decimals = "2",
                            Name = "Boliviano",
                            Number = "68"
                        },
                        new
                        {
                            Code = "BOV",
                            Decimals = "2",
                            Name = "Bolivian Mvdol (funds code)",
                            Number = "984"
                        },
                        new
                        {
                            Code = "BRL",
                            Decimals = "2",
                            Name = "Brazilian real",
                            Number = "986"
                        },
                        new
                        {
                            Code = "BSD",
                            Decimals = "2",
                            Name = "Bahamian dollar",
                            Number = "44"
                        },
                        new
                        {
                            Code = "BTN",
                            Decimals = "2",
                            Name = "Bhutanese ngultrum",
                            Number = "64"
                        },
                        new
                        {
                            Code = "BWP",
                            Decimals = "2",
                            Name = "Botswana pula",
                            Number = "72"
                        },
                        new
                        {
                            Code = "BYR",
                            Decimals = "0",
                            Name = "Belarusian ruble",
                            Number = "974"
                        },
                        new
                        {
                            Code = "BZD",
                            Decimals = "2",
                            Name = "Belize dollar",
                            Number = "84"
                        },
                        new
                        {
                            Code = "CAD",
                            Decimals = "2",
                            Name = "Canadian dollar",
                            Number = "124"
                        },
                        new
                        {
                            Code = "CDF",
                            Decimals = "2",
                            Name = "Congolese franc",
                            Number = "976"
                        },
                        new
                        {
                            Code = "CHE",
                            Decimals = "2",
                            Name = "WIR Euro (complementary currency)",
                            Number = "947"
                        },
                        new
                        {
                            Code = "CHF",
                            Decimals = "2",
                            Name = "Swiss franc",
                            Number = "756"
                        },
                        new
                        {
                            Code = "CHW",
                            Decimals = "2",
                            Name = "WIR Franc (complementary currency)",
                            Number = "948"
                        },
                        new
                        {
                            Code = "CLF",
                            Decimals = "0",
                            Name = "Unidad de Fomento (funds code)",
                            Number = "990"
                        },
                        new
                        {
                            Code = "CLP",
                            Decimals = "0",
                            Name = "Chilean peso",
                            Number = "152"
                        },
                        new
                        {
                            Code = "CNY",
                            Decimals = "2",
                            Name = "Chinese yuan",
                            Number = "156"
                        },
                        new
                        {
                            Code = "COP",
                            Decimals = "2",
                            Name = "Colombian peso",
                            Number = "170"
                        },
                        new
                        {
                            Code = "COU",
                            Decimals = "2",
                            Name = "Unidad de Valor Real",
                            Number = "970"
                        },
                        new
                        {
                            Code = "CRC",
                            Decimals = "2",
                            Name = "Costa Rican colon",
                            Number = "188"
                        },
                        new
                        {
                            Code = "CUC",
                            Decimals = "2",
                            Name = "Cuban convertible peso",
                            Number = "931"
                        },
                        new
                        {
                            Code = "CUP",
                            Decimals = "2",
                            Name = "Cuban peso",
                            Number = "192"
                        },
                        new
                        {
                            Code = "CVE",
                            Decimals = "0",
                            Name = "Cape Verde escudo",
                            Number = "132"
                        },
                        new
                        {
                            Code = "CZK",
                            Decimals = "2",
                            Name = "Czech koruna",
                            Number = "203"
                        },
                        new
                        {
                            Code = "DJF",
                            Decimals = "0",
                            Name = "Djiboutian franc",
                            Number = "262"
                        },
                        new
                        {
                            Code = "DKK",
                            Decimals = "2",
                            Name = "Danish krone",
                            Number = "208"
                        },
                        new
                        {
                            Code = "DOP",
                            Decimals = "2",
                            Name = "Dominican peso",
                            Number = "214"
                        },
                        new
                        {
                            Code = "DZD",
                            Decimals = "2",
                            Name = "Algerian dinar",
                            Number = "12"
                        },
                        new
                        {
                            Code = "EGP",
                            Decimals = "2",
                            Name = "Egyptian pound",
                            Number = "818"
                        },
                        new
                        {
                            Code = "ERN",
                            Decimals = "2",
                            Name = "Eritrean nakfa",
                            Number = "232"
                        },
                        new
                        {
                            Code = "ETB",
                            Decimals = "2",
                            Name = "Ethiopian birr",
                            Number = "230"
                        },
                        new
                        {
                            Code = "EUR",
                            Decimals = "2",
                            Name = "Euro",
                            Number = "978"
                        },
                        new
                        {
                            Code = "FJD",
                            Decimals = "2",
                            Name = "Fiji dollar",
                            Number = "242"
                        },
                        new
                        {
                            Code = "FKP",
                            Decimals = "2",
                            Name = "Falkland Islands pound",
                            Number = "238"
                        },
                        new
                        {
                            Code = "GBP",
                            Decimals = "2",
                            Name = "Pound sterling",
                            Number = "826"
                        },
                        new
                        {
                            Code = "GEL",
                            Decimals = "2",
                            Name = "Georgian lari",
                            Number = "981"
                        },
                        new
                        {
                            Code = "GHS",
                            Decimals = "2",
                            Name = "Ghanaian cedi",
                            Number = "936"
                        },
                        new
                        {
                            Code = "GIP",
                            Decimals = "2",
                            Name = "Gibraltar pound",
                            Number = "292"
                        },
                        new
                        {
                            Code = "GMD",
                            Decimals = "2",
                            Name = "Gambian dalasi",
                            Number = "270"
                        },
                        new
                        {
                            Code = "GNF",
                            Decimals = "0",
                            Name = "Guinean franc",
                            Number = "324"
                        },
                        new
                        {
                            Code = "GTQ",
                            Decimals = "2",
                            Name = "Guatemalan quetzal",
                            Number = "320"
                        },
                        new
                        {
                            Code = "GYD",
                            Decimals = "2",
                            Name = "Guyanese dollar",
                            Number = "328"
                        },
                        new
                        {
                            Code = "HKD",
                            Decimals = "2",
                            Name = "Hong Kong dollar",
                            Number = "344"
                        },
                        new
                        {
                            Code = "HNL",
                            Decimals = "2",
                            Name = "Honduran lempira",
                            Number = "340"
                        },
                        new
                        {
                            Code = "HRK",
                            Decimals = "2",
                            Name = "Croatian kuna",
                            Number = "191"
                        },
                        new
                        {
                            Code = "HTG",
                            Decimals = "2",
                            Name = "Haitian gourde",
                            Number = "332"
                        },
                        new
                        {
                            Code = "HUF",
                            Decimals = "2",
                            Name = "Hungarian forint",
                            Number = "348"
                        },
                        new
                        {
                            Code = "IDR",
                            Decimals = "2",
                            Name = "Indonesian rupiah",
                            Number = "360"
                        },
                        new
                        {
                            Code = "ILS",
                            Decimals = "2",
                            Name = "Israeli new shekel",
                            Number = "376"
                        },
                        new
                        {
                            Code = "INR",
                            Decimals = "2",
                            Name = "Indian rupee",
                            Number = "356"
                        },
                        new
                        {
                            Code = "IQD",
                            Decimals = "3",
                            Name = "Iraqi dinar",
                            Number = "368"
                        },
                        new
                        {
                            Code = "IRR",
                            Decimals = "0",
                            Name = "Iranian rial",
                            Number = "364"
                        },
                        new
                        {
                            Code = "ISK",
                            Decimals = "0",
                            Name = "Icelandic króna",
                            Number = "352"
                        },
                        new
                        {
                            Code = "JMD",
                            Decimals = "2",
                            Name = "Jamaican dollar",
                            Number = "388"
                        },
                        new
                        {
                            Code = "JOD",
                            Decimals = "3",
                            Name = "Jordanian dinar",
                            Number = "400"
                        },
                        new
                        {
                            Code = "JPY",
                            Decimals = "0",
                            Name = "Japanese yen",
                            Number = "392"
                        },
                        new
                        {
                            Code = "KES",
                            Decimals = "2",
                            Name = "Kenyan shilling",
                            Number = "404"
                        },
                        new
                        {
                            Code = "KGS",
                            Decimals = "2",
                            Name = "Kyrgyzstani som",
                            Number = "417"
                        },
                        new
                        {
                            Code = "KHR",
                            Decimals = "2",
                            Name = "Cambodian riel",
                            Number = "116"
                        },
                        new
                        {
                            Code = "KMF",
                            Decimals = "0",
                            Name = "Comoro franc",
                            Number = "174"
                        },
                        new
                        {
                            Code = "KPW",
                            Decimals = "0",
                            Name = "North Korean won",
                            Number = "408"
                        },
                        new
                        {
                            Code = "KRW",
                            Decimals = "0",
                            Name = "South Korean won",
                            Number = "410"
                        },
                        new
                        {
                            Code = "KWD",
                            Decimals = "3",
                            Name = "Kuwaiti dinar",
                            Number = "414"
                        },
                        new
                        {
                            Code = "KYD",
                            Decimals = "2",
                            Name = "Cayman Islands dollar",
                            Number = "136"
                        },
                        new
                        {
                            Code = "KZT",
                            Decimals = "2",
                            Name = "Kazakhstani tenge",
                            Number = "398"
                        },
                        new
                        {
                            Code = "LAK",
                            Decimals = "0",
                            Name = "Lao kip",
                            Number = "418"
                        },
                        new
                        {
                            Code = "LBP",
                            Decimals = "0",
                            Name = "Lebanese pound",
                            Number = "422"
                        },
                        new
                        {
                            Code = "LKR",
                            Decimals = "2",
                            Name = "Sri Lankan rupee",
                            Number = "144"
                        },
                        new
                        {
                            Code = "LRD",
                            Decimals = "2",
                            Name = "Liberian dollar",
                            Number = "430"
                        },
                        new
                        {
                            Code = "LSL",
                            Decimals = "2",
                            Name = "Lesotho loti",
                            Number = "426"
                        },
                        new
                        {
                            Code = "LTL",
                            Decimals = "2",
                            Name = "Lithuanian litas",
                            Number = "440"
                        },
                        new
                        {
                            Code = "LVL",
                            Decimals = "2",
                            Name = "Latvian lats",
                            Number = "428"
                        },
                        new
                        {
                            Code = "LYD",
                            Decimals = "3",
                            Name = "Libyan dinar",
                            Number = "434"
                        },
                        new
                        {
                            Code = "MAD",
                            Decimals = "2",
                            Name = "Moroccan dirham",
                            Number = "504"
                        },
                        new
                        {
                            Code = "MDL",
                            Decimals = "2",
                            Name = "Moldovan leu",
                            Number = "498"
                        },
                        new
                        {
                            Code = "MGA",
                            Decimals = "0.7[8]",
                            Name = "Malagasy ariary",
                            Number = "969"
                        },
                        new
                        {
                            Code = "MKD",
                            Decimals = "0",
                            Name = "Macedonian denar",
                            Number = "807"
                        },
                        new
                        {
                            Code = "MMK",
                            Decimals = "0",
                            Name = "Myanma kyat",
                            Number = "104"
                        },
                        new
                        {
                            Code = "MNT",
                            Decimals = "2",
                            Name = "Mongolian tugrik",
                            Number = "496"
                        },
                        new
                        {
                            Code = "MOP",
                            Decimals = "2",
                            Name = "Macanese pataca",
                            Number = "446"
                        },
                        new
                        {
                            Code = "MRO",
                            Decimals = "0.7[8]",
                            Name = "Mauritanian ouguiya",
                            Number = "478"
                        },
                        new
                        {
                            Code = "MUR",
                            Decimals = "2",
                            Name = "Mauritian rupee",
                            Number = "480"
                        },
                        new
                        {
                            Code = "MVR",
                            Decimals = "2",
                            Name = "Maldivian rufiyaa",
                            Number = "462"
                        },
                        new
                        {
                            Code = "MWK",
                            Decimals = "2",
                            Name = "Malawian kwacha",
                            Number = "454"
                        },
                        new
                        {
                            Code = "MXN",
                            Decimals = "2",
                            Name = "Mexican peso",
                            Number = "484"
                        },
                        new
                        {
                            Code = "MXV",
                            Decimals = "2",
                            Name = "Mexican Unidad de Inversion (UDI) (funds code)",
                            Number = "979"
                        },
                        new
                        {
                            Code = "MYR",
                            Decimals = "2",
                            Name = "Malaysian ringgit",
                            Number = "458"
                        },
                        new
                        {
                            Code = "MZN",
                            Decimals = "2",
                            Name = "Mozambican metical",
                            Number = "943"
                        },
                        new
                        {
                            Code = "NAD",
                            Decimals = "2",
                            Name = "Namibian dollar",
                            Number = "516"
                        },
                        new
                        {
                            Code = "NGN",
                            Decimals = "2",
                            Name = "Nigerian naira",
                            Number = "566"
                        },
                        new
                        {
                            Code = "NIO",
                            Decimals = "2",
                            Name = "Nicaraguan córdoba",
                            Number = "558"
                        },
                        new
                        {
                            Code = "NOK",
                            Decimals = "2",
                            Name = "Norwegian krone",
                            Number = "578"
                        },
                        new
                        {
                            Code = "NPR",
                            Decimals = "2",
                            Name = "Nepalese rupee",
                            Number = "524"
                        },
                        new
                        {
                            Code = "NZD",
                            Decimals = "2",
                            Name = "New Zealand dollar",
                            Number = "554"
                        },
                        new
                        {
                            Code = "OMR",
                            Decimals = "3",
                            Name = "Omani rial",
                            Number = "512"
                        },
                        new
                        {
                            Code = "PAB",
                            Decimals = "2",
                            Name = "Panamanian balboa",
                            Number = "590"
                        },
                        new
                        {
                            Code = "PEN",
                            Decimals = "2",
                            Name = "Peruvian nuevo sol",
                            Number = "604"
                        },
                        new
                        {
                            Code = "PGK",
                            Decimals = "2",
                            Name = "Papua New Guinean kina",
                            Number = "598"
                        },
                        new
                        {
                            Code = "PHP",
                            Decimals = "2",
                            Name = "Philippine peso",
                            Number = "608"
                        },
                        new
                        {
                            Code = "PKR",
                            Decimals = "2",
                            Name = "Pakistani rupee",
                            Number = "586"
                        },
                        new
                        {
                            Code = "PLN",
                            Decimals = "2",
                            Name = "Polish złoty",
                            Number = "985"
                        },
                        new
                        {
                            Code = "PYG",
                            Decimals = "0",
                            Name = "Paraguayan guaraní",
                            Number = "600"
                        },
                        new
                        {
                            Code = "QAR",
                            Decimals = "2",
                            Name = "Qatari riyal",
                            Number = "634"
                        },
                        new
                        {
                            Code = "RON",
                            Decimals = "2",
                            Name = "Romanian new leu",
                            Number = "946"
                        },
                        new
                        {
                            Code = "RSD",
                            Decimals = "2",
                            Name = "Serbian dinar",
                            Number = "941"
                        },
                        new
                        {
                            Code = "RUB",
                            Decimals = "2",
                            Name = "Russian rouble",
                            Number = "643"
                        },
                        new
                        {
                            Code = "RWF",
                            Decimals = "0",
                            Name = "Rwandan franc",
                            Number = "646"
                        },
                        new
                        {
                            Code = "SAR",
                            Decimals = "2",
                            Name = "Saudi riyal",
                            Number = "682"
                        },
                        new
                        {
                            Code = "SBD",
                            Decimals = "2",
                            Name = "Solomon Islands dollar",
                            Number = "90"
                        },
                        new
                        {
                            Code = "SCR",
                            Decimals = "2",
                            Name = "Seychelles rupee",
                            Number = "690"
                        },
                        new
                        {
                            Code = "SDG",
                            Decimals = "2",
                            Name = "Sudanese pound",
                            Number = "938"
                        },
                        new
                        {
                            Code = "SEK",
                            Decimals = "2",
                            Name = "Swedish krona/kronor",
                            Number = "752"
                        },
                        new
                        {
                            Code = "SGD",
                            Decimals = "2",
                            Name = "Singapore dollar",
                            Number = "702"
                        },
                        new
                        {
                            Code = "SHP",
                            Decimals = "2",
                            Name = "Saint Helena pound",
                            Number = "654"
                        },
                        new
                        {
                            Code = "SLL",
                            Decimals = "0",
                            Name = "Sierra Leonean leone",
                            Number = "694"
                        },
                        new
                        {
                            Code = "SOS",
                            Decimals = "2",
                            Name = "Somali shilling",
                            Number = "706"
                        },
                        new
                        {
                            Code = "SRD",
                            Decimals = "2",
                            Name = "Surinamese dollar",
                            Number = "968"
                        },
                        new
                        {
                            Code = "SSP",
                            Decimals = "2",
                            Name = "South Sudanese pound",
                            Number = "728"
                        },
                        new
                        {
                            Code = "STD",
                            Decimals = "0",
                            Name = "São Tomé and Príncipe dobra",
                            Number = "678"
                        },
                        new
                        {
                            Code = "SYP",
                            Decimals = "2",
                            Name = "Syrian pound",
                            Number = "760"
                        },
                        new
                        {
                            Code = "SZL",
                            Decimals = "2",
                            Name = "Swazi lilangeni",
                            Number = "748"
                        },
                        new
                        {
                            Code = "THB",
                            Decimals = "2",
                            Name = "Thai baht",
                            Number = "764"
                        },
                        new
                        {
                            Code = "TJS",
                            Decimals = "2",
                            Name = "Tajikistani somoni",
                            Number = "972"
                        },
                        new
                        {
                            Code = "TMT",
                            Decimals = "2",
                            Name = "Turkmenistani manat",
                            Number = "934"
                        },
                        new
                        {
                            Code = "TND",
                            Decimals = "3",
                            Name = "Tunisian dinar",
                            Number = "788"
                        },
                        new
                        {
                            Code = "TOP",
                            Decimals = "2",
                            Name = "Tongan paʻanga",
                            Number = "776"
                        },
                        new
                        {
                            Code = "TRY",
                            Decimals = "2",
                            Name = "Turkish lira",
                            Number = "949"
                        },
                        new
                        {
                            Code = "TTD",
                            Decimals = "2",
                            Name = "Trinidad and Tobago dollar",
                            Number = "780"
                        },
                        new
                        {
                            Code = "TWD",
                            Decimals = "2",
                            Name = "New Taiwan dollar",
                            Number = "901"
                        },
                        new
                        {
                            Code = "TZS",
                            Decimals = "2",
                            Name = "Tanzanian shilling",
                            Number = "834"
                        },
                        new
                        {
                            Code = "UAH",
                            Decimals = "2",
                            Name = "Ukrainian hryvnia",
                            Number = "980"
                        },
                        new
                        {
                            Code = "UGX",
                            Decimals = "2",
                            Name = "Ugandan shilling",
                            Number = "800"
                        },
                        new
                        {
                            Code = "USD",
                            Decimals = "2",
                            Name = "United States dollar",
                            Number = "840"
                        },
                        new
                        {
                            Code = "USN",
                            Decimals = "2",
                            Name = "United States dollar (next day) (funds code)",
                            Number = "997"
                        },
                        new
                        {
                            Code = "USS",
                            Decimals = "2",
                            Name = "United States dollar (same day) (funds code) (one source[who?] claims it is no longer used, but it is still on the ISO 4217-MA list)",
                            Number = "998"
                        },
                        new
                        {
                            Code = "UYI",
                            Decimals = "0",
                            Name = "Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)",
                            Number = "940"
                        },
                        new
                        {
                            Code = "UYU",
                            Decimals = "2",
                            Name = "Uruguayan peso",
                            Number = "858"
                        },
                        new
                        {
                            Code = "UZS",
                            Decimals = "2",
                            Name = "Uzbekistan som",
                            Number = "860"
                        },
                        new
                        {
                            Code = "VEF",
                            Decimals = "2",
                            Name = "Venezuelan bolívar fuerte",
                            Number = "937"
                        },
                        new
                        {
                            Code = "VND",
                            Decimals = "0",
                            Name = "Vietnamese dong",
                            Number = "704"
                        },
                        new
                        {
                            Code = "VUV",
                            Decimals = "0",
                            Name = "Vanuatu vatu",
                            Number = "548"
                        },
                        new
                        {
                            Code = "WST",
                            Decimals = "2",
                            Name = "Samoan tala",
                            Number = "882"
                        },
                        new
                        {
                            Code = "XAF",
                            Decimals = "0",
                            Name = "CFA franc BEAC",
                            Number = "950"
                        },
                        new
                        {
                            Code = "XAG",
                            Decimals = ".",
                            Name = "Silver (one troy ounce)",
                            Number = "961"
                        },
                        new
                        {
                            Code = "XAU",
                            Decimals = ".",
                            Name = "Gold (one troy ounce)",
                            Number = "959"
                        },
                        new
                        {
                            Code = "XBA",
                            Decimals = ".",
                            Name = "European Composite Unit (EURCO) (bond market unit)",
                            Number = "955"
                        },
                        new
                        {
                            Code = "XBB",
                            Decimals = ".",
                            Name = "European Monetary Unit (E.M.U.-6) (bond market unit)",
                            Number = "956"
                        },
                        new
                        {
                            Code = "XBC",
                            Decimals = ".",
                            Name = "European Unit of Account 9 (E.U.A.-9) (bond market unit)",
                            Number = "957"
                        },
                        new
                        {
                            Code = "XBD",
                            Decimals = ".",
                            Name = "European Unit of Account 17 (E.U.A.-17) (bond market unit)",
                            Number = "958"
                        },
                        new
                        {
                            Code = "XCD",
                            Decimals = "2",
                            Name = "East Caribbean dollar",
                            Number = "951"
                        },
                        new
                        {
                            Code = "XDR",
                            Decimals = ".",
                            Name = "Special drawing rights",
                            Number = "960"
                        },
                        new
                        {
                            Code = "XFU",
                            Decimals = ".",
                            Name = "UIC franc (special settlement currency)",
                            Number = "Nil"
                        },
                        new
                        {
                            Code = "XOF",
                            Decimals = "0",
                            Name = "CFA franc BCEAO",
                            Number = "952"
                        },
                        new
                        {
                            Code = "XPD",
                            Decimals = ".",
                            Name = "Palladium (one troy ounce)",
                            Number = "964"
                        },
                        new
                        {
                            Code = "XPF",
                            Decimals = "0",
                            Name = "CFP franc",
                            Number = "953"
                        },
                        new
                        {
                            Code = "XPT",
                            Decimals = ".",
                            Name = "Platinum (one troy ounce)",
                            Number = "962"
                        },
                        new
                        {
                            Code = "XTS",
                            Decimals = ".",
                            Name = "Code reserved for testing purposes",
                            Number = "963"
                        },
                        new
                        {
                            Code = "XXX",
                            Decimals = ".",
                            Name = "No currency",
                            Number = "999"
                        },
                        new
                        {
                            Code = "YER",
                            Decimals = "2",
                            Name = "Yemeni rial",
                            Number = "886"
                        },
                        new
                        {
                            Code = "ZAR",
                            Decimals = "2",
                            Name = "South African rand",
                            Number = "710"
                        },
                        new
                        {
                            Code = "ZMW",
                            Decimals = "2",
                            Name = "Zambian kwacha",
                            Number = "967"
                        });
                });

            modelBuilder.Entity("TemplateBase.Geography.Entities.Country", b =>
                {
                    b.Property<string>("Iso2")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CapsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iso3")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("NumberCode")
                        .HasColumnType("int");

                    b.Property<int>("PhoneCode")
                        .HasColumnType("int");

                    b.HasKey("Iso2");

                    b.HasIndex("Iso2");

                    b.HasIndex("Iso3");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Iso2 = "AF",
                            CapsName = "AFGHANISTAN",
                            Iso3 = "AFG",
                            Name = "Afghanistan",
                            NumberCode = 4,
                            PhoneCode = 93
                        },
                        new
                        {
                            Iso2 = "AL",
                            CapsName = "ALBANIA",
                            Iso3 = "ALB",
                            Name = "Albania",
                            NumberCode = 8,
                            PhoneCode = 355
                        },
                        new
                        {
                            Iso2 = "DZ",
                            CapsName = "ALGERIA",
                            Iso3 = "DZA",
                            Name = "Algeria",
                            NumberCode = 12,
                            PhoneCode = 213
                        },
                        new
                        {
                            Iso2 = "AS",
                            CapsName = "AMERICAN SAMOA",
                            Iso3 = "ASM",
                            Name = "American Samoa",
                            NumberCode = 16,
                            PhoneCode = 1684
                        },
                        new
                        {
                            Iso2 = "AD",
                            CapsName = "ANDORRA",
                            Iso3 = "AND",
                            Name = "Andorra",
                            NumberCode = 20,
                            PhoneCode = 376
                        },
                        new
                        {
                            Iso2 = "AO",
                            CapsName = "ANGOLA",
                            Iso3 = "AGO",
                            Name = "Angola",
                            NumberCode = 24,
                            PhoneCode = 244
                        },
                        new
                        {
                            Iso2 = "AI",
                            CapsName = "ANGUILLA",
                            Iso3 = "AIA",
                            Name = "Anguilla",
                            NumberCode = 660,
                            PhoneCode = 1264
                        },
                        new
                        {
                            Iso2 = "AQ",
                            CapsName = "ANTARCTICA",
                            Iso3 = "",
                            Name = "Antarctica",
                            PhoneCode = 0
                        },
                        new
                        {
                            Iso2 = "AG",
                            CapsName = "ANTIGUA AND BARBUDA",
                            Iso3 = "ATG",
                            Name = "Antigua and Barbuda",
                            NumberCode = 28,
                            PhoneCode = 1268
                        },
                        new
                        {
                            Iso2 = "AR",
                            CapsName = "ARGENTINA",
                            Iso3 = "ARG",
                            Name = "Argentina",
                            NumberCode = 32,
                            PhoneCode = 54
                        },
                        new
                        {
                            Iso2 = "AM",
                            CapsName = "ARMENIA",
                            Iso3 = "ARM",
                            Name = "Armenia",
                            NumberCode = 51,
                            PhoneCode = 374
                        },
                        new
                        {
                            Iso2 = "AW",
                            CapsName = "ARUBA",
                            Iso3 = "ABW",
                            Name = "Aruba",
                            NumberCode = 533,
                            PhoneCode = 297
                        },
                        new
                        {
                            Iso2 = "AU",
                            CapsName = "AUSTRALIA",
                            Iso3 = "AUS",
                            Name = "Australia",
                            NumberCode = 36,
                            PhoneCode = 61
                        },
                        new
                        {
                            Iso2 = "AT",
                            CapsName = "AUSTRIA",
                            Iso3 = "AUT",
                            Name = "Austria",
                            NumberCode = 40,
                            PhoneCode = 43
                        },
                        new
                        {
                            Iso2 = "AZ",
                            CapsName = "AZERBAIJAN",
                            Iso3 = "AZE",
                            Name = "Azerbaijan",
                            NumberCode = 31,
                            PhoneCode = 994
                        },
                        new
                        {
                            Iso2 = "BS",
                            CapsName = "BAHAMAS",
                            Iso3 = "BHS",
                            Name = "Bahamas",
                            NumberCode = 44,
                            PhoneCode = 1242
                        },
                        new
                        {
                            Iso2 = "BH",
                            CapsName = "BAHRAIN",
                            Iso3 = "BHR",
                            Name = "Bahrain",
                            NumberCode = 48,
                            PhoneCode = 973
                        },
                        new
                        {
                            Iso2 = "BD",
                            CapsName = "BANGLADESH",
                            Iso3 = "BGD",
                            Name = "Bangladesh",
                            NumberCode = 50,
                            PhoneCode = 880
                        },
                        new
                        {
                            Iso2 = "BB",
                            CapsName = "BARBADOS",
                            Iso3 = "BRB",
                            Name = "Barbados",
                            NumberCode = 52,
                            PhoneCode = 1246
                        },
                        new
                        {
                            Iso2 = "BY",
                            CapsName = "BELARUS",
                            Iso3 = "BLR",
                            Name = "Belarus",
                            NumberCode = 112,
                            PhoneCode = 375
                        },
                        new
                        {
                            Iso2 = "BE",
                            CapsName = "BELGIUM",
                            Iso3 = "BEL",
                            Name = "Belgium",
                            NumberCode = 56,
                            PhoneCode = 32
                        },
                        new
                        {
                            Iso2 = "BZ",
                            CapsName = "BELIZE",
                            Iso3 = "BLZ",
                            Name = "Belize",
                            NumberCode = 84,
                            PhoneCode = 501
                        },
                        new
                        {
                            Iso2 = "BJ",
                            CapsName = "BENIN",
                            Iso3 = "BEN",
                            Name = "Benin",
                            NumberCode = 204,
                            PhoneCode = 229
                        },
                        new
                        {
                            Iso2 = "BM",
                            CapsName = "BERMUDA",
                            Iso3 = "BMU",
                            Name = "Bermuda",
                            NumberCode = 60,
                            PhoneCode = 1441
                        },
                        new
                        {
                            Iso2 = "BT",
                            CapsName = "BHUTAN",
                            Iso3 = "BTN",
                            Name = "Bhutan",
                            NumberCode = 64,
                            PhoneCode = 975
                        },
                        new
                        {
                            Iso2 = "BO",
                            CapsName = "BOLIVIA",
                            Iso3 = "BOL",
                            Name = "Bolivia",
                            NumberCode = 68,
                            PhoneCode = 591
                        },
                        new
                        {
                            Iso2 = "BA",
                            CapsName = "BOSNIA AND HERZEGOVINA",
                            Iso3 = "BIH",
                            Name = "Bosnia and Herzegovina",
                            NumberCode = 70,
                            PhoneCode = 387
                        },
                        new
                        {
                            Iso2 = "BW",
                            CapsName = "BOTSWANA",
                            Iso3 = "BWA",
                            Name = "Botswana",
                            NumberCode = 72,
                            PhoneCode = 267
                        },
                        new
                        {
                            Iso2 = "BV",
                            CapsName = "BOUVET ISLAND",
                            Iso3 = "",
                            Name = "Bouvet Island",
                            PhoneCode = 0
                        },
                        new
                        {
                            Iso2 = "BR",
                            CapsName = "BRAZIL",
                            Iso3 = "BRA",
                            Name = "Brazil",
                            NumberCode = 76,
                            PhoneCode = 55
                        },
                        new
                        {
                            Iso2 = "IO",
                            CapsName = "BRITISH INDIAN OCEAN TERRITORY",
                            Iso3 = "",
                            Name = "British Indian Ocean Territory",
                            PhoneCode = 246
                        },
                        new
                        {
                            Iso2 = "BN",
                            CapsName = "BRUNEI DARUSSALAM",
                            Iso3 = "BRN",
                            Name = "Brunei Darussalam",
                            NumberCode = 96,
                            PhoneCode = 673
                        },
                        new
                        {
                            Iso2 = "BG",
                            CapsName = "BULGARIA",
                            Iso3 = "BGR",
                            Name = "Bulgaria",
                            NumberCode = 100,
                            PhoneCode = 359
                        },
                        new
                        {
                            Iso2 = "BF",
                            CapsName = "BURKINA FASO",
                            Iso3 = "BFA",
                            Name = "Burkina Faso",
                            NumberCode = 854,
                            PhoneCode = 226
                        },
                        new
                        {
                            Iso2 = "BI",
                            CapsName = "BURUNDI",
                            Iso3 = "BDI",
                            Name = "Burundi",
                            NumberCode = 108,
                            PhoneCode = 257
                        },
                        new
                        {
                            Iso2 = "KH",
                            CapsName = "CAMBODIA",
                            Iso3 = "KHM",
                            Name = "Cambodia",
                            NumberCode = 116,
                            PhoneCode = 855
                        },
                        new
                        {
                            Iso2 = "CM",
                            CapsName = "CAMEROON",
                            Iso3 = "CMR",
                            Name = "Cameroon",
                            NumberCode = 120,
                            PhoneCode = 237
                        },
                        new
                        {
                            Iso2 = "CA",
                            CapsName = "CANADA",
                            Iso3 = "CAN",
                            Name = "Canada",
                            NumberCode = 124,
                            PhoneCode = 1
                        },
                        new
                        {
                            Iso2 = "CV",
                            CapsName = "CAPE VERDE",
                            Iso3 = "CPV",
                            Name = "Cape Verde",
                            NumberCode = 132,
                            PhoneCode = 238
                        },
                        new
                        {
                            Iso2 = "KY",
                            CapsName = "CAYMAN ISLANDS",
                            Iso3 = "CYM",
                            Name = "Cayman Islands",
                            NumberCode = 136,
                            PhoneCode = 1345
                        },
                        new
                        {
                            Iso2 = "CF",
                            CapsName = "CENTRAL AFRICAN REPUBLIC",
                            Iso3 = "CAF",
                            Name = "Central African Republic",
                            NumberCode = 140,
                            PhoneCode = 236
                        },
                        new
                        {
                            Iso2 = "TD",
                            CapsName = "CHAD",
                            Iso3 = "TCD",
                            Name = "Chad",
                            NumberCode = 148,
                            PhoneCode = 235
                        },
                        new
                        {
                            Iso2 = "CL",
                            CapsName = "CHILE",
                            Iso3 = "CHL",
                            Name = "Chile",
                            NumberCode = 152,
                            PhoneCode = 56
                        },
                        new
                        {
                            Iso2 = "CN",
                            CapsName = "CHINA",
                            Iso3 = "CHN",
                            Name = "China",
                            NumberCode = 156,
                            PhoneCode = 86
                        },
                        new
                        {
                            Iso2 = "CX",
                            CapsName = "CHRISTMAS ISLAND",
                            Iso3 = "",
                            Name = "Christmas Island",
                            PhoneCode = 61
                        },
                        new
                        {
                            Iso2 = "CC",
                            CapsName = "COCOS (KEELING) ISLANDS",
                            Iso3 = "",
                            Name = "Cocos (Keeling) Islands",
                            PhoneCode = 672
                        },
                        new
                        {
                            Iso2 = "CO",
                            CapsName = "COLOMBIA",
                            Iso3 = "COL",
                            Name = "Colombia",
                            NumberCode = 170,
                            PhoneCode = 57
                        },
                        new
                        {
                            Iso2 = "KM",
                            CapsName = "COMOROS",
                            Iso3 = "COM",
                            Name = "Comoros",
                            NumberCode = 174,
                            PhoneCode = 269
                        },
                        new
                        {
                            Iso2 = "CG",
                            CapsName = "CONGO",
                            Iso3 = "COG",
                            Name = "Congo",
                            NumberCode = 178,
                            PhoneCode = 242
                        },
                        new
                        {
                            Iso2 = "CD",
                            CapsName = "CONGO, THE DEMOCRATIC REPUBLIC OF THE",
                            Iso3 = "COD",
                            Name = "Congo, the Democratic Republic of the",
                            NumberCode = 180,
                            PhoneCode = 242
                        },
                        new
                        {
                            Iso2 = "CK",
                            CapsName = "COOK ISLANDS",
                            Iso3 = "COK",
                            Name = "Cook Islands",
                            NumberCode = 184,
                            PhoneCode = 682
                        },
                        new
                        {
                            Iso2 = "CR",
                            CapsName = "COSTA RICA",
                            Iso3 = "CRI",
                            Name = "Costa Rica",
                            NumberCode = 188,
                            PhoneCode = 506
                        },
                        new
                        {
                            Iso2 = "CI",
                            CapsName = "COTE D'IVOIRE",
                            Iso3 = "CIV",
                            Name = "Cote D'Ivoire",
                            NumberCode = 384,
                            PhoneCode = 225
                        },
                        new
                        {
                            Iso2 = "HR",
                            CapsName = "CROATIA",
                            Iso3 = "HRV",
                            Name = "Croatia",
                            NumberCode = 191,
                            PhoneCode = 385
                        },
                        new
                        {
                            Iso2 = "CU",
                            CapsName = "CUBA",
                            Iso3 = "CUB",
                            Name = "Cuba",
                            NumberCode = 192,
                            PhoneCode = 53
                        },
                        new
                        {
                            Iso2 = "CY",
                            CapsName = "CYPRUS",
                            Iso3 = "CYP",
                            Name = "Cyprus",
                            NumberCode = 196,
                            PhoneCode = 357
                        },
                        new
                        {
                            Iso2 = "CZ",
                            CapsName = "CZECH REPUBLIC",
                            Iso3 = "CZE",
                            Name = "Czech Republic",
                            NumberCode = 203,
                            PhoneCode = 420
                        },
                        new
                        {
                            Iso2 = "DK",
                            CapsName = "DENMARK",
                            Iso3 = "DNK",
                            Name = "Denmark",
                            NumberCode = 208,
                            PhoneCode = 45
                        },
                        new
                        {
                            Iso2 = "DJ",
                            CapsName = "DJIBOUTI",
                            Iso3 = "DJI",
                            Name = "Djibouti",
                            NumberCode = 262,
                            PhoneCode = 253
                        },
                        new
                        {
                            Iso2 = "DM",
                            CapsName = "DOMINICA",
                            Iso3 = "DMA",
                            Name = "Dominica",
                            NumberCode = 212,
                            PhoneCode = 1767
                        },
                        new
                        {
                            Iso2 = "DO",
                            CapsName = "DOMINICAN REPUBLIC",
                            Iso3 = "DOM",
                            Name = "Dominican Republic",
                            NumberCode = 214,
                            PhoneCode = 1809
                        },
                        new
                        {
                            Iso2 = "EC",
                            CapsName = "ECUADOR",
                            Iso3 = "ECU",
                            Name = "Ecuador",
                            NumberCode = 218,
                            PhoneCode = 593
                        },
                        new
                        {
                            Iso2 = "EG",
                            CapsName = "EGYPT",
                            Iso3 = "EGY",
                            Name = "Egypt",
                            NumberCode = 818,
                            PhoneCode = 20
                        },
                        new
                        {
                            Iso2 = "SV",
                            CapsName = "EL SALVADOR",
                            Iso3 = "SLV",
                            Name = "El Salvador",
                            NumberCode = 222,
                            PhoneCode = 503
                        },
                        new
                        {
                            Iso2 = "GQ",
                            CapsName = "EQUATORIAL GUINEA",
                            Iso3 = "GNQ",
                            Name = "Equatorial Guinea",
                            NumberCode = 226,
                            PhoneCode = 240
                        },
                        new
                        {
                            Iso2 = "ER",
                            CapsName = "ERITREA",
                            Iso3 = "ERI",
                            Name = "Eritrea",
                            NumberCode = 232,
                            PhoneCode = 291
                        },
                        new
                        {
                            Iso2 = "EE",
                            CapsName = "ESTONIA",
                            Iso3 = "EST",
                            Name = "Estonia",
                            NumberCode = 233,
                            PhoneCode = 372
                        },
                        new
                        {
                            Iso2 = "ET",
                            CapsName = "ETHIOPIA",
                            Iso3 = "ETH",
                            Name = "Ethiopia",
                            NumberCode = 231,
                            PhoneCode = 251
                        },
                        new
                        {
                            Iso2 = "FK",
                            CapsName = "FALKLAND ISLANDS (MALVINAS)",
                            Iso3 = "FLK",
                            Name = "Falkland Islands (Malvinas)",
                            NumberCode = 238,
                            PhoneCode = 500
                        },
                        new
                        {
                            Iso2 = "FO",
                            CapsName = "FAROE ISLANDS",
                            Iso3 = "FRO",
                            Name = "Faroe Islands",
                            NumberCode = 234,
                            PhoneCode = 298
                        },
                        new
                        {
                            Iso2 = "FJ",
                            CapsName = "FIJI",
                            Iso3 = "FJI",
                            Name = "Fiji",
                            NumberCode = 242,
                            PhoneCode = 679
                        },
                        new
                        {
                            Iso2 = "FI",
                            CapsName = "FINLAND",
                            Iso3 = "FIN",
                            Name = "Finland",
                            NumberCode = 246,
                            PhoneCode = 358
                        },
                        new
                        {
                            Iso2 = "FR",
                            CapsName = "FRANCE",
                            Iso3 = "FRA",
                            Name = "France",
                            NumberCode = 250,
                            PhoneCode = 33
                        },
                        new
                        {
                            Iso2 = "GF",
                            CapsName = "FRENCH GUIANA",
                            Iso3 = "GUF",
                            Name = "French Guiana",
                            NumberCode = 254,
                            PhoneCode = 594
                        },
                        new
                        {
                            Iso2 = "PF",
                            CapsName = "FRENCH POLYNESIA",
                            Iso3 = "PYF",
                            Name = "French Polynesia",
                            NumberCode = 258,
                            PhoneCode = 689
                        },
                        new
                        {
                            Iso2 = "TF",
                            CapsName = "FRENCH SOUTHERN TERRITORIES",
                            Iso3 = "",
                            Name = "French Southern Territories",
                            PhoneCode = 0
                        },
                        new
                        {
                            Iso2 = "GA",
                            CapsName = "GABON",
                            Iso3 = "GAB",
                            Name = "Gabon",
                            NumberCode = 266,
                            PhoneCode = 241
                        },
                        new
                        {
                            Iso2 = "GM",
                            CapsName = "GAMBIA",
                            Iso3 = "GMB",
                            Name = "Gambia",
                            NumberCode = 270,
                            PhoneCode = 220
                        },
                        new
                        {
                            Iso2 = "GE",
                            CapsName = "GEORGIA",
                            Iso3 = "GEO",
                            Name = "Georgia",
                            NumberCode = 268,
                            PhoneCode = 995
                        },
                        new
                        {
                            Iso2 = "DE",
                            CapsName = "GERMANY",
                            Iso3 = "DEU",
                            Name = "Germany",
                            NumberCode = 276,
                            PhoneCode = 49
                        },
                        new
                        {
                            Iso2 = "GH",
                            CapsName = "GHANA",
                            Iso3 = "GHA",
                            Name = "Ghana",
                            NumberCode = 288,
                            PhoneCode = 233
                        },
                        new
                        {
                            Iso2 = "GI",
                            CapsName = "GIBRALTAR",
                            Iso3 = "GIB",
                            Name = "Gibraltar",
                            NumberCode = 292,
                            PhoneCode = 350
                        },
                        new
                        {
                            Iso2 = "GR",
                            CapsName = "GREECE",
                            Iso3 = "GRC",
                            Name = "Greece",
                            NumberCode = 300,
                            PhoneCode = 30
                        },
                        new
                        {
                            Iso2 = "GL",
                            CapsName = "GREENLAND",
                            Iso3 = "GRL",
                            Name = "Greenland",
                            NumberCode = 304,
                            PhoneCode = 299
                        },
                        new
                        {
                            Iso2 = "GD",
                            CapsName = "GRENADA",
                            Iso3 = "GRD",
                            Name = "Grenada",
                            NumberCode = 308,
                            PhoneCode = 1473
                        },
                        new
                        {
                            Iso2 = "GP",
                            CapsName = "GUADELOUPE",
                            Iso3 = "GLP",
                            Name = "Guadeloupe",
                            NumberCode = 312,
                            PhoneCode = 590
                        },
                        new
                        {
                            Iso2 = "GU",
                            CapsName = "GUAM",
                            Iso3 = "GUM",
                            Name = "Guam",
                            NumberCode = 316,
                            PhoneCode = 1671
                        },
                        new
                        {
                            Iso2 = "GT",
                            CapsName = "GUATEMALA",
                            Iso3 = "GTM",
                            Name = "Guatemala",
                            NumberCode = 320,
                            PhoneCode = 502
                        },
                        new
                        {
                            Iso2 = "GN",
                            CapsName = "GUINEA",
                            Iso3 = "GIN",
                            Name = "Guinea",
                            NumberCode = 324,
                            PhoneCode = 224
                        },
                        new
                        {
                            Iso2 = "GW",
                            CapsName = "GUINEA-BISSAU",
                            Iso3 = "GNB",
                            Name = "Guinea-Bissau",
                            NumberCode = 624,
                            PhoneCode = 245
                        },
                        new
                        {
                            Iso2 = "GY",
                            CapsName = "GUYANA",
                            Iso3 = "GUY",
                            Name = "Guyana",
                            NumberCode = 328,
                            PhoneCode = 592
                        },
                        new
                        {
                            Iso2 = "HT",
                            CapsName = "HAITI",
                            Iso3 = "HTI",
                            Name = "Haiti",
                            NumberCode = 332,
                            PhoneCode = 509
                        },
                        new
                        {
                            Iso2 = "HM",
                            CapsName = "HEARD ISLAND AND MCDONALD ISLANDS",
                            Iso3 = "",
                            Name = "Heard Island and Mcdonald Islands",
                            PhoneCode = 0
                        },
                        new
                        {
                            Iso2 = "VA",
                            CapsName = "HOLY SEE (VATICAN CITY STATE)",
                            Iso3 = "VAT",
                            Name = "Holy See (Vatican City State)",
                            NumberCode = 336,
                            PhoneCode = 39
                        },
                        new
                        {
                            Iso2 = "HN",
                            CapsName = "HONDURAS",
                            Iso3 = "HND",
                            Name = "Honduras",
                            NumberCode = 340,
                            PhoneCode = 504
                        },
                        new
                        {
                            Iso2 = "HK",
                            CapsName = "HONG KONG",
                            Iso3 = "HKG",
                            Name = "Hong Kong",
                            NumberCode = 344,
                            PhoneCode = 852
                        },
                        new
                        {
                            Iso2 = "HU",
                            CapsName = "HUNGARY",
                            Iso3 = "HUN",
                            Name = "Hungary",
                            NumberCode = 348,
                            PhoneCode = 36
                        },
                        new
                        {
                            Iso2 = "IS",
                            CapsName = "ICELAND",
                            Iso3 = "ISL",
                            Name = "Iceland",
                            NumberCode = 352,
                            PhoneCode = 354
                        },
                        new
                        {
                            Iso2 = "IN",
                            CapsName = "INDIA",
                            Iso3 = "IND",
                            Name = "India",
                            NumberCode = 356,
                            PhoneCode = 91
                        },
                        new
                        {
                            Iso2 = "ID",
                            CapsName = "INDONESIA",
                            Iso3 = "IDN",
                            Name = "Indonesia",
                            NumberCode = 360,
                            PhoneCode = 62
                        },
                        new
                        {
                            Iso2 = "IR",
                            CapsName = "IRAN, ISLAMIC REPUBLIC OF",
                            Iso3 = "IRN",
                            Name = "Iran, Islamic Republic of",
                            NumberCode = 364,
                            PhoneCode = 98
                        },
                        new
                        {
                            Iso2 = "IQ",
                            CapsName = "IRAQ",
                            Iso3 = "IRQ",
                            Name = "Iraq",
                            NumberCode = 368,
                            PhoneCode = 964
                        },
                        new
                        {
                            Iso2 = "IE",
                            CapsName = "IRELAND",
                            Iso3 = "IRL",
                            Name = "Ireland",
                            NumberCode = 372,
                            PhoneCode = 353
                        },
                        new
                        {
                            Iso2 = "IL",
                            CapsName = "ISRAEL",
                            Iso3 = "ISR",
                            Name = "Israel",
                            NumberCode = 376,
                            PhoneCode = 972
                        },
                        new
                        {
                            Iso2 = "IT",
                            CapsName = "ITALY",
                            Iso3 = "ITA",
                            Name = "Italy",
                            NumberCode = 380,
                            PhoneCode = 39
                        },
                        new
                        {
                            Iso2 = "JM",
                            CapsName = "JAMAICA",
                            Iso3 = "JAM",
                            Name = "Jamaica",
                            NumberCode = 388,
                            PhoneCode = 1876
                        },
                        new
                        {
                            Iso2 = "JP",
                            CapsName = "JAPAN",
                            Iso3 = "JPN",
                            Name = "Japan",
                            NumberCode = 392,
                            PhoneCode = 81
                        },
                        new
                        {
                            Iso2 = "JO",
                            CapsName = "JORDAN",
                            Iso3 = "JOR",
                            Name = "Jordan",
                            NumberCode = 400,
                            PhoneCode = 962
                        },
                        new
                        {
                            Iso2 = "KZ",
                            CapsName = "KAZAKHSTAN",
                            Iso3 = "KAZ",
                            Name = "Kazakhstan",
                            NumberCode = 398,
                            PhoneCode = 7
                        },
                        new
                        {
                            Iso2 = "KE",
                            CapsName = "KENYA",
                            Iso3 = "KEN",
                            Name = "Kenya",
                            NumberCode = 404,
                            PhoneCode = 254
                        },
                        new
                        {
                            Iso2 = "KI",
                            CapsName = "KIRIBATI",
                            Iso3 = "KIR",
                            Name = "Kiribati",
                            NumberCode = 296,
                            PhoneCode = 686
                        },
                        new
                        {
                            Iso2 = "KP",
                            CapsName = "KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF",
                            Iso3 = "PRK",
                            Name = "Korea, Democratic People's Republic of",
                            NumberCode = 408,
                            PhoneCode = 850
                        },
                        new
                        {
                            Iso2 = "KR",
                            CapsName = "KOREA, REPUBLIC OF",
                            Iso3 = "KOR",
                            Name = "Korea, Republic of",
                            NumberCode = 410,
                            PhoneCode = 82
                        },
                        new
                        {
                            Iso2 = "KW",
                            CapsName = "KUWAIT",
                            Iso3 = "KWT",
                            Name = "Kuwait",
                            NumberCode = 414,
                            PhoneCode = 965
                        },
                        new
                        {
                            Iso2 = "KG",
                            CapsName = "KYRGYZSTAN",
                            Iso3 = "KGZ",
                            Name = "Kyrgyzstan",
                            NumberCode = 417,
                            PhoneCode = 996
                        },
                        new
                        {
                            Iso2 = "LA",
                            CapsName = "LAO PEOPLE'S DEMOCRATIC REPUBLIC",
                            Iso3 = "LAO",
                            Name = "Lao People's Democratic Republic",
                            NumberCode = 418,
                            PhoneCode = 856
                        },
                        new
                        {
                            Iso2 = "LV",
                            CapsName = "LATVIA",
                            Iso3 = "LVA",
                            Name = "Latvia",
                            NumberCode = 428,
                            PhoneCode = 371
                        },
                        new
                        {
                            Iso2 = "LB",
                            CapsName = "LEBANON",
                            Iso3 = "LBN",
                            Name = "Lebanon",
                            NumberCode = 422,
                            PhoneCode = 961
                        },
                        new
                        {
                            Iso2 = "LS",
                            CapsName = "LESOTHO",
                            Iso3 = "LSO",
                            Name = "Lesotho",
                            NumberCode = 426,
                            PhoneCode = 266
                        },
                        new
                        {
                            Iso2 = "LR",
                            CapsName = "LIBERIA",
                            Iso3 = "LBR",
                            Name = "Liberia",
                            NumberCode = 430,
                            PhoneCode = 231
                        },
                        new
                        {
                            Iso2 = "LY",
                            CapsName = "LIBYAN ARAB JAMAHIRIYA",
                            Iso3 = "LBY",
                            Name = "Libyan Arab Jamahiriya",
                            NumberCode = 434,
                            PhoneCode = 218
                        },
                        new
                        {
                            Iso2 = "LI",
                            CapsName = "LIECHTENSTEIN",
                            Iso3 = "LIE",
                            Name = "Liechtenstein",
                            NumberCode = 438,
                            PhoneCode = 423
                        },
                        new
                        {
                            Iso2 = "LT",
                            CapsName = "LITHUANIA",
                            Iso3 = "LTU",
                            Name = "Lithuania",
                            NumberCode = 440,
                            PhoneCode = 370
                        },
                        new
                        {
                            Iso2 = "LU",
                            CapsName = "LUXEMBOURG",
                            Iso3 = "LUX",
                            Name = "Luxembourg",
                            NumberCode = 442,
                            PhoneCode = 352
                        },
                        new
                        {
                            Iso2 = "MO",
                            CapsName = "MACAO",
                            Iso3 = "MAC",
                            Name = "Macao",
                            NumberCode = 446,
                            PhoneCode = 853
                        },
                        new
                        {
                            Iso2 = "MK",
                            CapsName = "MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF",
                            Iso3 = "MKD",
                            Name = "Macedonia, the Former Yugoslav Republic of",
                            NumberCode = 807,
                            PhoneCode = 389
                        },
                        new
                        {
                            Iso2 = "MG",
                            CapsName = "MADAGASCAR",
                            Iso3 = "MDG",
                            Name = "Madagascar",
                            NumberCode = 450,
                            PhoneCode = 261
                        },
                        new
                        {
                            Iso2 = "MW",
                            CapsName = "MALAWI",
                            Iso3 = "MWI",
                            Name = "Malawi",
                            NumberCode = 454,
                            PhoneCode = 265
                        },
                        new
                        {
                            Iso2 = "MY",
                            CapsName = "MALAYSIA",
                            Iso3 = "MYS",
                            Name = "Malaysia",
                            NumberCode = 458,
                            PhoneCode = 60
                        },
                        new
                        {
                            Iso2 = "MV",
                            CapsName = "MALDIVES",
                            Iso3 = "MDV",
                            Name = "Maldives",
                            NumberCode = 462,
                            PhoneCode = 960
                        },
                        new
                        {
                            Iso2 = "ML",
                            CapsName = "MALI",
                            Iso3 = "MLI",
                            Name = "Mali",
                            NumberCode = 466,
                            PhoneCode = 223
                        },
                        new
                        {
                            Iso2 = "MT",
                            CapsName = "MALTA",
                            Iso3 = "MLT",
                            Name = "Malta",
                            NumberCode = 470,
                            PhoneCode = 356
                        },
                        new
                        {
                            Iso2 = "MH",
                            CapsName = "MARSHALL ISLANDS",
                            Iso3 = "MHL",
                            Name = "Marshall Islands",
                            NumberCode = 584,
                            PhoneCode = 692
                        },
                        new
                        {
                            Iso2 = "MQ",
                            CapsName = "MARTINIQUE",
                            Iso3 = "MTQ",
                            Name = "Martinique",
                            NumberCode = 474,
                            PhoneCode = 596
                        },
                        new
                        {
                            Iso2 = "MR",
                            CapsName = "MAURITANIA",
                            Iso3 = "MRT",
                            Name = "Mauritania",
                            NumberCode = 478,
                            PhoneCode = 222
                        },
                        new
                        {
                            Iso2 = "MU",
                            CapsName = "MAURITIUS",
                            Iso3 = "MUS",
                            Name = "Mauritius",
                            NumberCode = 480,
                            PhoneCode = 230
                        },
                        new
                        {
                            Iso2 = "YT",
                            CapsName = "MAYOTTE",
                            Iso3 = "",
                            Name = "Mayotte",
                            PhoneCode = 269
                        },
                        new
                        {
                            Iso2 = "MX",
                            CapsName = "MEXICO",
                            Iso3 = "MEX",
                            Name = "Mexico",
                            NumberCode = 484,
                            PhoneCode = 52
                        },
                        new
                        {
                            Iso2 = "FM",
                            CapsName = "MICRONESIA, FEDERATED STATES OF",
                            Iso3 = "FSM",
                            Name = "Micronesia, Federated States of",
                            NumberCode = 583,
                            PhoneCode = 691
                        },
                        new
                        {
                            Iso2 = "MD",
                            CapsName = "MOLDOVA, REPUBLIC OF",
                            Iso3 = "MDA",
                            Name = "Moldova, Republic of",
                            NumberCode = 498,
                            PhoneCode = 373
                        },
                        new
                        {
                            Iso2 = "MC",
                            CapsName = "MONACO",
                            Iso3 = "MCO",
                            Name = "Monaco",
                            NumberCode = 492,
                            PhoneCode = 377
                        },
                        new
                        {
                            Iso2 = "MN",
                            CapsName = "MONGOLIA",
                            Iso3 = "MNG",
                            Name = "Mongolia",
                            NumberCode = 496,
                            PhoneCode = 976
                        },
                        new
                        {
                            Iso2 = "MS",
                            CapsName = "MONTSERRAT",
                            Iso3 = "MSR",
                            Name = "Montserrat",
                            NumberCode = 500,
                            PhoneCode = 1664
                        },
                        new
                        {
                            Iso2 = "MA",
                            CapsName = "MOROCCO",
                            Iso3 = "MAR",
                            Name = "Morocco",
                            NumberCode = 504,
                            PhoneCode = 212
                        },
                        new
                        {
                            Iso2 = "MZ",
                            CapsName = "MOZAMBIQUE",
                            Iso3 = "MOZ",
                            Name = "Mozambique",
                            NumberCode = 508,
                            PhoneCode = 258
                        },
                        new
                        {
                            Iso2 = "MM",
                            CapsName = "MYANMAR",
                            Iso3 = "MMR",
                            Name = "Myanmar",
                            NumberCode = 104,
                            PhoneCode = 95
                        },
                        new
                        {
                            Iso2 = "NA",
                            CapsName = "NAMIBIA",
                            Iso3 = "NAM",
                            Name = "Namibia",
                            NumberCode = 516,
                            PhoneCode = 264
                        },
                        new
                        {
                            Iso2 = "NR",
                            CapsName = "NAURU",
                            Iso3 = "NRU",
                            Name = "Nauru",
                            NumberCode = 520,
                            PhoneCode = 674
                        },
                        new
                        {
                            Iso2 = "NP",
                            CapsName = "NEPAL",
                            Iso3 = "NPL",
                            Name = "Nepal",
                            NumberCode = 524,
                            PhoneCode = 977
                        },
                        new
                        {
                            Iso2 = "NL",
                            CapsName = "NETHERLANDS",
                            Iso3 = "NLD",
                            Name = "Netherlands",
                            NumberCode = 528,
                            PhoneCode = 31
                        },
                        new
                        {
                            Iso2 = "AN",
                            CapsName = "NETHERLANDS ANTILLES",
                            Iso3 = "ANT",
                            Name = "Netherlands Antilles",
                            NumberCode = 530,
                            PhoneCode = 599
                        },
                        new
                        {
                            Iso2 = "NC",
                            CapsName = "NEW CALEDONIA",
                            Iso3 = "NCL",
                            Name = "New Caledonia",
                            NumberCode = 540,
                            PhoneCode = 687
                        },
                        new
                        {
                            Iso2 = "NZ",
                            CapsName = "NEW ZEALAND",
                            Iso3 = "NZL",
                            Name = "New Zealand",
                            NumberCode = 554,
                            PhoneCode = 64
                        },
                        new
                        {
                            Iso2 = "NI",
                            CapsName = "NICARAGUA",
                            Iso3 = "NIC",
                            Name = "Nicaragua",
                            NumberCode = 558,
                            PhoneCode = 505
                        },
                        new
                        {
                            Iso2 = "NE",
                            CapsName = "NIGER",
                            Iso3 = "NER",
                            Name = "Niger",
                            NumberCode = 562,
                            PhoneCode = 227
                        },
                        new
                        {
                            Iso2 = "NG",
                            CapsName = "NIGERIA",
                            Iso3 = "NGA",
                            Name = "Nigeria",
                            NumberCode = 566,
                            PhoneCode = 234
                        },
                        new
                        {
                            Iso2 = "NU",
                            CapsName = "NIUE",
                            Iso3 = "NIU",
                            Name = "Niue",
                            NumberCode = 570,
                            PhoneCode = 683
                        },
                        new
                        {
                            Iso2 = "NF",
                            CapsName = "NORFOLK ISLAND",
                            Iso3 = "NFK",
                            Name = "Norfolk Island",
                            NumberCode = 574,
                            PhoneCode = 672
                        },
                        new
                        {
                            Iso2 = "MP",
                            CapsName = "NORTHERN MARIANA ISLANDS",
                            Iso3 = "MNP",
                            Name = "Northern Mariana Islands",
                            NumberCode = 580,
                            PhoneCode = 1670
                        },
                        new
                        {
                            Iso2 = "NO",
                            CapsName = "NORWAY",
                            Iso3 = "NOR",
                            Name = "Norway",
                            NumberCode = 578,
                            PhoneCode = 47
                        },
                        new
                        {
                            Iso2 = "OM",
                            CapsName = "OMAN",
                            Iso3 = "OMN",
                            Name = "Oman",
                            NumberCode = 512,
                            PhoneCode = 968
                        },
                        new
                        {
                            Iso2 = "PK",
                            CapsName = "PAKISTAN",
                            Iso3 = "PAK",
                            Name = "Pakistan",
                            NumberCode = 586,
                            PhoneCode = 92
                        },
                        new
                        {
                            Iso2 = "PW",
                            CapsName = "PALAU",
                            Iso3 = "PLW",
                            Name = "Palau",
                            NumberCode = 585,
                            PhoneCode = 680
                        },
                        new
                        {
                            Iso2 = "PS",
                            CapsName = "PALESTINIAN TERRITORY, OCCUPIED",
                            Iso3 = "",
                            Name = "Palestinian Territory, Occupied",
                            PhoneCode = 970
                        },
                        new
                        {
                            Iso2 = "PA",
                            CapsName = "PANAMA",
                            Iso3 = "PAN",
                            Name = "Panama",
                            NumberCode = 591,
                            PhoneCode = 507
                        },
                        new
                        {
                            Iso2 = "PG",
                            CapsName = "PAPUA NEW GUINEA",
                            Iso3 = "PNG",
                            Name = "Papua New Guinea",
                            NumberCode = 598,
                            PhoneCode = 675
                        },
                        new
                        {
                            Iso2 = "PY",
                            CapsName = "PARAGUAY",
                            Iso3 = "PRY",
                            Name = "Paraguay",
                            NumberCode = 600,
                            PhoneCode = 595
                        },
                        new
                        {
                            Iso2 = "PE",
                            CapsName = "PERU",
                            Iso3 = "PER",
                            Name = "Peru",
                            NumberCode = 604,
                            PhoneCode = 51
                        },
                        new
                        {
                            Iso2 = "PH",
                            CapsName = "PHILIPPINES",
                            Iso3 = "PHL",
                            Name = "Philippines",
                            NumberCode = 608,
                            PhoneCode = 63
                        },
                        new
                        {
                            Iso2 = "PN",
                            CapsName = "PITCAIRN",
                            Iso3 = "PCN",
                            Name = "Pitcairn",
                            NumberCode = 612,
                            PhoneCode = 0
                        },
                        new
                        {
                            Iso2 = "PL",
                            CapsName = "POLAND",
                            Iso3 = "POL",
                            Name = "Poland",
                            NumberCode = 616,
                            PhoneCode = 48
                        },
                        new
                        {
                            Iso2 = "PT",
                            CapsName = "PORTUGAL",
                            Iso3 = "PRT",
                            Name = "Portugal",
                            NumberCode = 620,
                            PhoneCode = 351
                        },
                        new
                        {
                            Iso2 = "PR",
                            CapsName = "PUERTO RICO",
                            Iso3 = "PRI",
                            Name = "Puerto Rico",
                            NumberCode = 630,
                            PhoneCode = 1787
                        },
                        new
                        {
                            Iso2 = "QA",
                            CapsName = "QATAR",
                            Iso3 = "QAT",
                            Name = "Qatar",
                            NumberCode = 634,
                            PhoneCode = 974
                        },
                        new
                        {
                            Iso2 = "RE",
                            CapsName = "REUNION",
                            Iso3 = "REU",
                            Name = "Reunion",
                            NumberCode = 638,
                            PhoneCode = 262
                        },
                        new
                        {
                            Iso2 = "RO",
                            CapsName = "ROMANIA",
                            Iso3 = "ROM",
                            Name = "Romania",
                            NumberCode = 642,
                            PhoneCode = 40
                        },
                        new
                        {
                            Iso2 = "RU",
                            CapsName = "RUSSIAN FEDERATION",
                            Iso3 = "RUS",
                            Name = "Russian Federation",
                            NumberCode = 643,
                            PhoneCode = 70
                        },
                        new
                        {
                            Iso2 = "RW",
                            CapsName = "RWANDA",
                            Iso3 = "RWA",
                            Name = "Rwanda",
                            NumberCode = 646,
                            PhoneCode = 250
                        },
                        new
                        {
                            Iso2 = "SH",
                            CapsName = "SAINT HELENA",
                            Iso3 = "SHN",
                            Name = "Saint Helena",
                            NumberCode = 654,
                            PhoneCode = 290
                        },
                        new
                        {
                            Iso2 = "KN",
                            CapsName = "SAINT KITTS AND NEVIS",
                            Iso3 = "KNA",
                            Name = "Saint Kitts and Nevis",
                            NumberCode = 659,
                            PhoneCode = 1869
                        },
                        new
                        {
                            Iso2 = "LC",
                            CapsName = "SAINT LUCIA",
                            Iso3 = "LCA",
                            Name = "Saint Lucia",
                            NumberCode = 662,
                            PhoneCode = 1758
                        },
                        new
                        {
                            Iso2 = "PM",
                            CapsName = "SAINT PIERRE AND MIQUELON",
                            Iso3 = "SPM",
                            Name = "Saint Pierre and Miquelon",
                            NumberCode = 666,
                            PhoneCode = 508
                        },
                        new
                        {
                            Iso2 = "VC",
                            CapsName = "SAINT VINCENT AND THE GRENADINES",
                            Iso3 = "VCT",
                            Name = "Saint Vincent and the Grenadines",
                            NumberCode = 670,
                            PhoneCode = 1784
                        },
                        new
                        {
                            Iso2 = "WS",
                            CapsName = "SAMOA",
                            Iso3 = "WSM",
                            Name = "Samoa",
                            NumberCode = 882,
                            PhoneCode = 684
                        },
                        new
                        {
                            Iso2 = "SM",
                            CapsName = "SAN MARINO",
                            Iso3 = "SMR",
                            Name = "San Marino",
                            NumberCode = 674,
                            PhoneCode = 378
                        },
                        new
                        {
                            Iso2 = "ST",
                            CapsName = "SAO TOME AND PRINCIPE",
                            Iso3 = "STP",
                            Name = "Sao Tome and Principe",
                            NumberCode = 678,
                            PhoneCode = 239
                        },
                        new
                        {
                            Iso2 = "SA",
                            CapsName = "SAUDI ARABIA",
                            Iso3 = "SAU",
                            Name = "Saudi Arabia",
                            NumberCode = 682,
                            PhoneCode = 966
                        },
                        new
                        {
                            Iso2 = "SN",
                            CapsName = "SENEGAL",
                            Iso3 = "SEN",
                            Name = "Senegal",
                            NumberCode = 686,
                            PhoneCode = 221
                        },
                        new
                        {
                            Iso2 = "CS",
                            CapsName = "SERBIA AND MONTENEGRO",
                            Iso3 = "",
                            Name = "Serbia and Montenegro",
                            PhoneCode = 381
                        },
                        new
                        {
                            Iso2 = "SC",
                            CapsName = "SEYCHELLES",
                            Iso3 = "SYC",
                            Name = "Seychelles",
                            NumberCode = 690,
                            PhoneCode = 248
                        },
                        new
                        {
                            Iso2 = "SL",
                            CapsName = "SIERRA LEONE",
                            Iso3 = "SLE",
                            Name = "Sierra Leone",
                            NumberCode = 694,
                            PhoneCode = 232
                        },
                        new
                        {
                            Iso2 = "SG",
                            CapsName = "SINGAPORE",
                            Iso3 = "SGP",
                            Name = "Singapore",
                            NumberCode = 702,
                            PhoneCode = 65
                        },
                        new
                        {
                            Iso2 = "SK",
                            CapsName = "SLOVAKIA",
                            Iso3 = "SVK",
                            Name = "Slovakia",
                            NumberCode = 703,
                            PhoneCode = 421
                        },
                        new
                        {
                            Iso2 = "SI",
                            CapsName = "SLOVENIA",
                            Iso3 = "SVN",
                            Name = "Slovenia",
                            NumberCode = 705,
                            PhoneCode = 386
                        },
                        new
                        {
                            Iso2 = "SB",
                            CapsName = "SOLOMON ISLANDS",
                            Iso3 = "SLB",
                            Name = "Solomon Islands",
                            NumberCode = 90,
                            PhoneCode = 677
                        },
                        new
                        {
                            Iso2 = "SO",
                            CapsName = "SOMALIA",
                            Iso3 = "SOM",
                            Name = "Somalia",
                            NumberCode = 706,
                            PhoneCode = 252
                        },
                        new
                        {
                            Iso2 = "ZA",
                            CapsName = "SOUTH AFRICA",
                            Iso3 = "ZAF",
                            Name = "South Africa",
                            NumberCode = 710,
                            PhoneCode = 27
                        },
                        new
                        {
                            Iso2 = "GS",
                            CapsName = "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS",
                            Iso3 = "",
                            Name = "South Georgia and the South Sandwich Islands",
                            PhoneCode = 0
                        },
                        new
                        {
                            Iso2 = "ES",
                            CapsName = "SPAIN",
                            Iso3 = "ESP",
                            Name = "Spain",
                            NumberCode = 724,
                            PhoneCode = 34
                        },
                        new
                        {
                            Iso2 = "LK",
                            CapsName = "SRI LANKA",
                            Iso3 = "LKA",
                            Name = "Sri Lanka",
                            NumberCode = 144,
                            PhoneCode = 94
                        },
                        new
                        {
                            Iso2 = "SD",
                            CapsName = "SUDAN",
                            Iso3 = "SDN",
                            Name = "Sudan",
                            NumberCode = 736,
                            PhoneCode = 249
                        },
                        new
                        {
                            Iso2 = "SR",
                            CapsName = "SURINAME",
                            Iso3 = "SUR",
                            Name = "Suriname",
                            NumberCode = 740,
                            PhoneCode = 597
                        },
                        new
                        {
                            Iso2 = "SJ",
                            CapsName = "SVALBARD AND JAN MAYEN",
                            Iso3 = "SJM",
                            Name = "Svalbard and Jan Mayen",
                            NumberCode = 744,
                            PhoneCode = 47
                        },
                        new
                        {
                            Iso2 = "SZ",
                            CapsName = "SWAZILAND",
                            Iso3 = "SWZ",
                            Name = "Swaziland",
                            NumberCode = 748,
                            PhoneCode = 268
                        },
                        new
                        {
                            Iso2 = "SE",
                            CapsName = "SWEDEN",
                            Iso3 = "SWE",
                            Name = "Sweden",
                            NumberCode = 752,
                            PhoneCode = 46
                        },
                        new
                        {
                            Iso2 = "CH",
                            CapsName = "SWITZERLAND",
                            Iso3 = "CHE",
                            Name = "Switzerland",
                            NumberCode = 756,
                            PhoneCode = 41
                        },
                        new
                        {
                            Iso2 = "SY",
                            CapsName = "SYRIAN ARAB REPUBLIC",
                            Iso3 = "SYR",
                            Name = "Syrian Arab Republic",
                            NumberCode = 760,
                            PhoneCode = 963
                        },
                        new
                        {
                            Iso2 = "TW",
                            CapsName = "TAIWAN, PROVINCE OF CHINA",
                            Iso3 = "TWN",
                            Name = "Taiwan, Province of China",
                            NumberCode = 158,
                            PhoneCode = 886
                        },
                        new
                        {
                            Iso2 = "TJ",
                            CapsName = "TAJIKISTAN",
                            Iso3 = "TJK",
                            Name = "Tajikistan",
                            NumberCode = 762,
                            PhoneCode = 992
                        },
                        new
                        {
                            Iso2 = "TZ",
                            CapsName = "TANZANIA, UNITED REPUBLIC OF",
                            Iso3 = "TZA",
                            Name = "Tanzania, United Republic of",
                            NumberCode = 834,
                            PhoneCode = 255
                        },
                        new
                        {
                            Iso2 = "TH",
                            CapsName = "THAILAND",
                            Iso3 = "THA",
                            Name = "Thailand",
                            NumberCode = 764,
                            PhoneCode = 66
                        },
                        new
                        {
                            Iso2 = "TL",
                            CapsName = "TIMOR-LESTE",
                            Iso3 = "",
                            Name = "Timor-Leste",
                            PhoneCode = 670
                        },
                        new
                        {
                            Iso2 = "TG",
                            CapsName = "TOGO",
                            Iso3 = "TGO",
                            Name = "Togo",
                            NumberCode = 768,
                            PhoneCode = 228
                        },
                        new
                        {
                            Iso2 = "TK",
                            CapsName = "TOKELAU",
                            Iso3 = "TKL",
                            Name = "Tokelau",
                            NumberCode = 772,
                            PhoneCode = 690
                        },
                        new
                        {
                            Iso2 = "TO",
                            CapsName = "TONGA",
                            Iso3 = "TON",
                            Name = "Tonga",
                            NumberCode = 776,
                            PhoneCode = 676
                        },
                        new
                        {
                            Iso2 = "TT",
                            CapsName = "TRINIDAD AND TOBAGO",
                            Iso3 = "TTO",
                            Name = "Trinidad and Tobago",
                            NumberCode = 780,
                            PhoneCode = 1868
                        },
                        new
                        {
                            Iso2 = "TN",
                            CapsName = "TUNISIA",
                            Iso3 = "TUN",
                            Name = "Tunisia",
                            NumberCode = 788,
                            PhoneCode = 216
                        },
                        new
                        {
                            Iso2 = "TR",
                            CapsName = "TURKEY",
                            Iso3 = "TUR",
                            Name = "Turkey",
                            NumberCode = 792,
                            PhoneCode = 90
                        },
                        new
                        {
                            Iso2 = "TM",
                            CapsName = "TURKMENISTAN",
                            Iso3 = "TKM",
                            Name = "Turkmenistan",
                            NumberCode = 795,
                            PhoneCode = 7370
                        },
                        new
                        {
                            Iso2 = "TC",
                            CapsName = "TURKS AND CAICOS ISLANDS",
                            Iso3 = "TCA",
                            Name = "Turks and Caicos Islands",
                            NumberCode = 796,
                            PhoneCode = 1649
                        },
                        new
                        {
                            Iso2 = "TV",
                            CapsName = "TUVALU",
                            Iso3 = "TUV",
                            Name = "Tuvalu",
                            NumberCode = 798,
                            PhoneCode = 688
                        },
                        new
                        {
                            Iso2 = "UG",
                            CapsName = "UGANDA",
                            Iso3 = "UGA",
                            Name = "Uganda",
                            NumberCode = 800,
                            PhoneCode = 256
                        },
                        new
                        {
                            Iso2 = "UA",
                            CapsName = "UKRAINE",
                            Iso3 = "UKR",
                            Name = "Ukraine",
                            NumberCode = 804,
                            PhoneCode = 380
                        },
                        new
                        {
                            Iso2 = "AE",
                            CapsName = "UNITED ARAB EMIRATES",
                            Iso3 = "ARE",
                            Name = "United Arab Emirates",
                            NumberCode = 784,
                            PhoneCode = 971
                        },
                        new
                        {
                            Iso2 = "GB",
                            CapsName = "UNITED KINGDOM",
                            Iso3 = "GBR",
                            Name = "United Kingdom",
                            NumberCode = 826,
                            PhoneCode = 44
                        },
                        new
                        {
                            Iso2 = "US",
                            CapsName = "UNITED STATES",
                            Iso3 = "USA",
                            Name = "United States",
                            NumberCode = 840,
                            PhoneCode = 1
                        },
                        new
                        {
                            Iso2 = "UM",
                            CapsName = "UNITED STATES MINOR OUTLYING ISLANDS",
                            Iso3 = "",
                            Name = "United States Minor Outlying Islands",
                            PhoneCode = 1
                        },
                        new
                        {
                            Iso2 = "UY",
                            CapsName = "URUGUAY",
                            Iso3 = "URY",
                            Name = "Uruguay",
                            NumberCode = 858,
                            PhoneCode = 598
                        },
                        new
                        {
                            Iso2 = "UZ",
                            CapsName = "UZBEKISTAN",
                            Iso3 = "UZB",
                            Name = "Uzbekistan",
                            NumberCode = 860,
                            PhoneCode = 998
                        },
                        new
                        {
                            Iso2 = "VU",
                            CapsName = "VANUATU",
                            Iso3 = "VUT",
                            Name = "Vanuatu",
                            NumberCode = 548,
                            PhoneCode = 678
                        },
                        new
                        {
                            Iso2 = "VE",
                            CapsName = "VENEZUELA",
                            Iso3 = "VEN",
                            Name = "Venezuela",
                            NumberCode = 862,
                            PhoneCode = 58
                        },
                        new
                        {
                            Iso2 = "VN",
                            CapsName = "VIET NAM",
                            Iso3 = "VNM",
                            Name = "Viet Nam",
                            NumberCode = 704,
                            PhoneCode = 84
                        },
                        new
                        {
                            Iso2 = "VG",
                            CapsName = "VIRGIN ISLANDS, BRITISH",
                            Iso3 = "VGB",
                            Name = "Virgin Islands, British",
                            NumberCode = 92,
                            PhoneCode = 1284
                        },
                        new
                        {
                            Iso2 = "VI",
                            CapsName = "VIRGIN ISLANDS, U.S.",
                            Iso3 = "VIR",
                            Name = "Virgin Islands, U.s.",
                            NumberCode = 850,
                            PhoneCode = 1340
                        },
                        new
                        {
                            Iso2 = "WF",
                            CapsName = "WALLIS AND FUTUNA",
                            Iso3 = "WLF",
                            Name = "Wallis and Futuna",
                            NumberCode = 876,
                            PhoneCode = 681
                        },
                        new
                        {
                            Iso2 = "EH",
                            CapsName = "WESTERN SAHARA",
                            Iso3 = "ESH",
                            Name = "Western Sahara",
                            NumberCode = 732,
                            PhoneCode = 212
                        },
                        new
                        {
                            Iso2 = "YE",
                            CapsName = "YEMEN",
                            Iso3 = "YEM",
                            Name = "Yemen",
                            NumberCode = 887,
                            PhoneCode = 967
                        },
                        new
                        {
                            Iso2 = "ZM",
                            CapsName = "ZAMBIA",
                            Iso3 = "ZMB",
                            Name = "Zambia",
                            NumberCode = 894,
                            PhoneCode = 260
                        },
                        new
                        {
                            Iso2 = "ZW",
                            CapsName = "ZIMBABWE",
                            Iso3 = "ZWE",
                            Name = "Zimbabwe",
                            NumberCode = 716,
                            PhoneCode = 263
                        });
                });

            modelBuilder.Entity("TemplateBase.Geography.Entities.EnabledCountry", b =>
                {
                    b.Property<string>("Iso2")
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Iso2");

                    b.ToTable("EnabledCountry");

                    b.HasData(
                        new
                        {
                            Iso2 = "US"
                        });
                });

            modelBuilder.Entity("TemplateBase.Geography.Entities.StateProvince", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbrev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iso2")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Iso2");

                    b.ToTable("StateProvince");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbrev = "Ala.",
                            Code = "AL",
                            Name = "Alabama"
                        },
                        new
                        {
                            Id = 2,
                            Abbrev = "Alaska",
                            Code = "AK",
                            Name = "Alaska"
                        },
                        new
                        {
                            Id = 3,
                            Abbrev = "Ariz.",
                            Code = "AZ",
                            Name = "Arizona"
                        },
                        new
                        {
                            Id = 4,
                            Abbrev = "Ark.",
                            Code = "AR",
                            Name = "Arkansas"
                        },
                        new
                        {
                            Id = 5,
                            Abbrev = "Calif.",
                            Code = "CA",
                            Name = "California"
                        },
                        new
                        {
                            Id = 6,
                            Abbrev = "Colo.",
                            Code = "CO",
                            Name = "Colorado"
                        },
                        new
                        {
                            Id = 7,
                            Abbrev = "Conn.",
                            Code = "CT",
                            Name = "Connecticut"
                        },
                        new
                        {
                            Id = 8,
                            Abbrev = "Del.",
                            Code = "DE",
                            Name = "Delaware"
                        },
                        new
                        {
                            Id = 9,
                            Abbrev = "D.C.",
                            Code = "DC",
                            Name = "District of Columbia"
                        },
                        new
                        {
                            Id = 10,
                            Abbrev = "Fla.",
                            Code = "FL",
                            Name = "Florida"
                        },
                        new
                        {
                            Id = 11,
                            Abbrev = "Ga.",
                            Code = "GA",
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = 12,
                            Abbrev = "Hawaii",
                            Code = "HI",
                            Name = "Hawaii"
                        },
                        new
                        {
                            Id = 13,
                            Abbrev = "Idaho",
                            Code = "ID",
                            Name = "Idaho"
                        },
                        new
                        {
                            Id = 14,
                            Abbrev = "Ill.",
                            Code = "IL",
                            Name = "Illinois"
                        },
                        new
                        {
                            Id = 15,
                            Abbrev = "Ind.",
                            Code = "IN",
                            Name = "Indiana"
                        },
                        new
                        {
                            Id = 16,
                            Abbrev = "Iowa",
                            Code = "IA",
                            Name = "Iowa"
                        },
                        new
                        {
                            Id = 17,
                            Abbrev = "Kans.",
                            Code = "KS",
                            Name = "Kansas"
                        },
                        new
                        {
                            Id = 18,
                            Abbrev = "Ky.",
                            Code = "KY",
                            Name = "Kentucky"
                        },
                        new
                        {
                            Id = 19,
                            Abbrev = "La.",
                            Code = "LA",
                            Name = "Louisiana"
                        },
                        new
                        {
                            Id = 20,
                            Abbrev = "Maine",
                            Code = "ME",
                            Name = "Maine"
                        },
                        new
                        {
                            Id = 21,
                            Abbrev = "Md.",
                            Code = "MD",
                            Name = "Maryland"
                        },
                        new
                        {
                            Id = 22,
                            Abbrev = "Mass.",
                            Code = "MA",
                            Name = "Massachusetts"
                        },
                        new
                        {
                            Id = 23,
                            Abbrev = "Mich.",
                            Code = "MI",
                            Name = "Michigan"
                        },
                        new
                        {
                            Id = 24,
                            Abbrev = "Minn.",
                            Code = "MN",
                            Name = "Minnesota"
                        },
                        new
                        {
                            Id = 25,
                            Abbrev = "Miss.",
                            Code = "MS",
                            Name = "Mississippi"
                        },
                        new
                        {
                            Id = 26,
                            Abbrev = "Mo.",
                            Code = "MO",
                            Name = "Missouri"
                        },
                        new
                        {
                            Id = 27,
                            Abbrev = "Mont.",
                            Code = "MT",
                            Name = "Montana"
                        },
                        new
                        {
                            Id = 28,
                            Abbrev = "Nebr.",
                            Code = "NE",
                            Name = "Nebraska"
                        },
                        new
                        {
                            Id = 29,
                            Abbrev = "Nev.",
                            Code = "NV",
                            Name = "Nevada"
                        },
                        new
                        {
                            Id = 30,
                            Abbrev = "N.H.",
                            Code = "NH",
                            Name = "New Hampshire"
                        },
                        new
                        {
                            Id = 31,
                            Abbrev = "N.J.",
                            Code = "NJ",
                            Name = "New Jersey"
                        },
                        new
                        {
                            Id = 32,
                            Abbrev = "N.M.",
                            Code = "NM",
                            Name = "New Mexico"
                        },
                        new
                        {
                            Id = 33,
                            Abbrev = "N.Y.",
                            Code = "NY",
                            Name = "New York"
                        },
                        new
                        {
                            Id = 34,
                            Abbrev = "N.C.",
                            Code = "NC",
                            Name = "North Carolina"
                        },
                        new
                        {
                            Id = 35,
                            Abbrev = "N.D.",
                            Code = "ND",
                            Name = "North Dakota"
                        },
                        new
                        {
                            Id = 36,
                            Abbrev = "Ohio",
                            Code = "OH",
                            Name = "Ohio"
                        },
                        new
                        {
                            Id = 37,
                            Abbrev = "Okla.",
                            Code = "OK",
                            Name = "Oklahoma"
                        },
                        new
                        {
                            Id = 38,
                            Abbrev = "Ore.",
                            Code = "OR",
                            Name = "Oregon"
                        },
                        new
                        {
                            Id = 39,
                            Abbrev = "Pa.",
                            Code = "PA",
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            Id = 40,
                            Abbrev = "R.I.",
                            Code = "RI",
                            Name = "Rhode Island"
                        },
                        new
                        {
                            Id = 41,
                            Abbrev = "S.C.",
                            Code = "SC",
                            Name = "South Carolina"
                        },
                        new
                        {
                            Id = 42,
                            Abbrev = "S.D.",
                            Code = "SD",
                            Name = "South Dakota"
                        },
                        new
                        {
                            Id = 43,
                            Abbrev = "Tenn.",
                            Code = "TN",
                            Name = "Tennessee"
                        },
                        new
                        {
                            Id = 44,
                            Abbrev = "Tex.",
                            Code = "TX",
                            Name = "Texas"
                        },
                        new
                        {
                            Id = 45,
                            Abbrev = "Utah",
                            Code = "UT",
                            Name = "Utah"
                        },
                        new
                        {
                            Id = 46,
                            Abbrev = "Vt.",
                            Code = "VT",
                            Name = "Vermont"
                        },
                        new
                        {
                            Id = 47,
                            Abbrev = "Va.",
                            Code = "VA",
                            Name = "Virginia"
                        },
                        new
                        {
                            Id = 48,
                            Abbrev = "Wash.",
                            Code = "WA",
                            Name = "Washington"
                        },
                        new
                        {
                            Id = 49,
                            Abbrev = "W.Va.",
                            Code = "WV",
                            Name = "West Virginia"
                        },
                        new
                        {
                            Id = 50,
                            Abbrev = "Wis.",
                            Code = "WI",
                            Name = "Wisconsin"
                        },
                        new
                        {
                            Id = 51,
                            Abbrev = "Wyo.",
                            Code = "WY",
                            Name = "Wyoming"
                        });
                });

            modelBuilder.Entity("TemplateBase.Languages.Entities.Language", b =>
                {
                    b.Property<string>("Code3")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NativeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code3");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Code3 = "aar",
                            Code2 = "aa",
                            Name = "Afar",
                            NativeName = "Afaraf"
                        },
                        new
                        {
                            Code3 = "abk",
                            Code2 = "ab",
                            Name = "Abkhaz",
                            NativeName = "аҧсуа бызшәа, аҧсшәа"
                        },
                        new
                        {
                            Code3 = "afr",
                            Code2 = "af",
                            Name = "Afrikaans",
                            NativeName = "Afrikaans"
                        },
                        new
                        {
                            Code3 = "aka",
                            Code2 = "ak",
                            Name = "Akan",
                            NativeName = "Akan"
                        },
                        new
                        {
                            Code3 = "amh",
                            Code2 = "am",
                            Name = "Amharic",
                            NativeName = "አማርኛ"
                        },
                        new
                        {
                            Code3 = "ara",
                            Code2 = "ar",
                            Name = "Arabic",
                            NativeName = "العربية"
                        },
                        new
                        {
                            Code3 = "arg",
                            Code2 = "an",
                            Name = "Aragonese",
                            NativeName = "aragonés"
                        },
                        new
                        {
                            Code3 = "asm",
                            Code2 = "as",
                            Name = "Assamese",
                            NativeName = "অসমীয়া"
                        },
                        new
                        {
                            Code3 = "ava",
                            Code2 = "av",
                            Name = "Avaric",
                            NativeName = "авар мацӀ, магӀарул мацӀ"
                        },
                        new
                        {
                            Code3 = "ave",
                            Code2 = "ae",
                            Name = "Avestan",
                            NativeName = "avesta"
                        },
                        new
                        {
                            Code3 = "aym",
                            Code2 = "ay",
                            Name = "Aymara",
                            NativeName = "aymar aru"
                        },
                        new
                        {
                            Code3 = "azb",
                            Code2 = "az",
                            Name = "South Azerbaijani",
                            NativeName = "تورکجه‎"
                        },
                        new
                        {
                            Code3 = "aze",
                            Code2 = "az",
                            Name = "Azerbaijani",
                            NativeName = "azərbaycan dili"
                        },
                        new
                        {
                            Code3 = "bak",
                            Code2 = "ba",
                            Name = "Bashkir",
                            NativeName = "башҡорт теле"
                        },
                        new
                        {
                            Code3 = "bam",
                            Code2 = "bm",
                            Name = "Bambara",
                            NativeName = "bamanankan"
                        },
                        new
                        {
                            Code3 = "bel",
                            Code2 = "be",
                            Name = "Belarusian",
                            NativeName = "беларуская мова"
                        },
                        new
                        {
                            Code3 = "ben",
                            Code2 = "bn",
                            Name = "Bengali; Bangla",
                            NativeName = "বাংলা"
                        },
                        new
                        {
                            Code3 = "bih",
                            Code2 = "bh",
                            Name = "Bihari",
                            NativeName = "भोजपुरी"
                        },
                        new
                        {
                            Code3 = "bis",
                            Code2 = "bi",
                            Name = "Bislama",
                            NativeName = "Bislama"
                        },
                        new
                        {
                            Code3 = "bod",
                            Code2 = "bo",
                            Name = "Tibetan Standard, Tibetan, Central",
                            NativeName = "བོད་ཡིག"
                        },
                        new
                        {
                            Code3 = "bos",
                            Code2 = "bs",
                            Name = "Bosnian",
                            NativeName = "bosanski jezik"
                        },
                        new
                        {
                            Code3 = "bre",
                            Code2 = "br",
                            Name = "Breton",
                            NativeName = "brezhoneg"
                        },
                        new
                        {
                            Code3 = "bul",
                            Code2 = "bg",
                            Name = "Bulgarian",
                            NativeName = "български език"
                        },
                        new
                        {
                            Code3 = "cat",
                            Code2 = "ca",
                            Name = "Catalan; Valencian",
                            NativeName = "català, valencià"
                        },
                        new
                        {
                            Code3 = "ces",
                            Code2 = "cs",
                            Name = "Czech",
                            NativeName = "čeština, český jazyk"
                        },
                        new
                        {
                            Code3 = "cha",
                            Code2 = "ch",
                            Name = "Chamorro",
                            NativeName = "Chamoru"
                        },
                        new
                        {
                            Code3 = "che",
                            Code2 = "ce",
                            Name = "Chechen",
                            NativeName = "нохчийн мотт"
                        },
                        new
                        {
                            Code3 = "chu",
                            Code2 = "cu",
                            Name = "Old Church Slavonic, Church Slavonic, Old Bulgarian",
                            NativeName = "ѩзыкъ словѣньскъ"
                        },
                        new
                        {
                            Code3 = "chv",
                            Code2 = "cv",
                            Name = "Chuvash",
                            NativeName = "чӑваш чӗлхи"
                        },
                        new
                        {
                            Code3 = "cor",
                            Code2 = "kw",
                            Name = "Cornish",
                            NativeName = "Kernewek"
                        },
                        new
                        {
                            Code3 = "cos",
                            Code2 = "co",
                            Name = "Corsican",
                            NativeName = "corsu, lingua corsa"
                        },
                        new
                        {
                            Code3 = "cre",
                            Code2 = "cr",
                            Name = "Cree",
                            NativeName = "ᓀᐦᐃᔭᐍᐏᐣ"
                        },
                        new
                        {
                            Code3 = "cym",
                            Code2 = "cy",
                            Name = "Welsh",
                            NativeName = "Cymraeg"
                        },
                        new
                        {
                            Code3 = "dan",
                            Code2 = "da",
                            Name = "Danish",
                            NativeName = "dansk"
                        },
                        new
                        {
                            Code3 = "deu",
                            Code2 = "de",
                            Name = "German",
                            NativeName = "Deutsch"
                        },
                        new
                        {
                            Code3 = "div",
                            Code2 = "dv",
                            Name = "Divehi; Dhivehi; Maldivian;",
                            NativeName = "ދިވެހި"
                        },
                        new
                        {
                            Code3 = "dzo",
                            Code2 = "dz",
                            Name = "Dzongkha",
                            NativeName = "རྫོང་ཁ"
                        },
                        new
                        {
                            Code3 = "ell",
                            Code2 = "el",
                            Name = "Greek, Modern",
                            NativeName = "ελληνικά"
                        },
                        new
                        {
                            Code3 = "eng",
                            Code2 = "en",
                            Name = "English",
                            NativeName = "English"
                        },
                        new
                        {
                            Code3 = "epo",
                            Code2 = "eo",
                            Name = "Esperanto",
                            NativeName = "Esperanto"
                        },
                        new
                        {
                            Code3 = "est",
                            Code2 = "et",
                            Name = "Estonian",
                            NativeName = "eesti, eesti keel"
                        },
                        new
                        {
                            Code3 = "eus",
                            Code2 = "eu",
                            Name = "Basque",
                            NativeName = "euskara, euskera"
                        },
                        new
                        {
                            Code3 = "ewe",
                            Code2 = "ee",
                            Name = "Ewe",
                            NativeName = "Eʋegbe"
                        },
                        new
                        {
                            Code3 = "fao",
                            Code2 = "fo",
                            Name = "Faroese",
                            NativeName = "føroyskt"
                        },
                        new
                        {
                            Code3 = "fas",
                            Code2 = "fa",
                            Name = "Persian (Farsi)",
                            NativeName = "فارسی"
                        },
                        new
                        {
                            Code3 = "fij",
                            Code2 = "fj",
                            Name = "Fijian",
                            NativeName = "vosa Vakaviti"
                        },
                        new
                        {
                            Code3 = "fin",
                            Code2 = "fi",
                            Name = "Finnish",
                            NativeName = "suomi, suomen kieli"
                        },
                        new
                        {
                            Code3 = "fra",
                            Code2 = "fr",
                            Name = "French",
                            NativeName = "français, langue française"
                        },
                        new
                        {
                            Code3 = "fry",
                            Code2 = "fy",
                            Name = "Western Frisian",
                            NativeName = "Frysk"
                        },
                        new
                        {
                            Code3 = "ful",
                            Code2 = "ff",
                            Name = "Fula; Fulah; Pulaar; Pular",
                            NativeName = "Fulfulde, Pulaar, Pular"
                        },
                        new
                        {
                            Code3 = "gla",
                            Code2 = "gd",
                            Name = "Scottish Gaelic; Gaelic",
                            NativeName = "Gàidhlig"
                        },
                        new
                        {
                            Code3 = "gle",
                            Code2 = "ga",
                            Name = "Irish",
                            NativeName = "Gaeilge"
                        },
                        new
                        {
                            Code3 = "glg",
                            Code2 = "gl",
                            Name = "Galician",
                            NativeName = "galego"
                        },
                        new
                        {
                            Code3 = "glv",
                            Code2 = "gv",
                            Name = "Manx",
                            NativeName = "Gaelg, Gailck"
                        },
                        new
                        {
                            Code3 = "grn",
                            Code2 = "gn",
                            Name = "Guaraní",
                            NativeName = "Avañe'ẽ"
                        },
                        new
                        {
                            Code3 = "guj",
                            Code2 = "gu",
                            Name = "Gujarati",
                            NativeName = "ગુજરાતી"
                        },
                        new
                        {
                            Code3 = "hat",
                            Code2 = "ht",
                            Name = "Haitian; Haitian Creole",
                            NativeName = "Kreyòl ayisyen"
                        },
                        new
                        {
                            Code3 = "hau",
                            Code2 = "ha",
                            Name = "Hausa",
                            NativeName = "Hausa, هَوُسَ"
                        },
                        new
                        {
                            Code3 = "heb",
                            Code2 = "he",
                            Name = "Hebrew (modern)",
                            NativeName = "עברית"
                        },
                        new
                        {
                            Code3 = "her",
                            Code2 = "hz",
                            Name = "Herero",
                            NativeName = "Otjiherero"
                        },
                        new
                        {
                            Code3 = "hin",
                            Code2 = "hi",
                            Name = "Hindi",
                            NativeName = "हिन्दी, हिंदी"
                        },
                        new
                        {
                            Code3 = "hmo",
                            Code2 = "ho",
                            Name = "Hiri Motu",
                            NativeName = "Hiri Motu"
                        },
                        new
                        {
                            Code3 = "hrv",
                            Code2 = "hr",
                            Name = "Croatian",
                            NativeName = "hrvatski jezik"
                        },
                        new
                        {
                            Code3 = "hun",
                            Code2 = "hu",
                            Name = "Hungarian",
                            NativeName = "magyar"
                        },
                        new
                        {
                            Code3 = "hye",
                            Code2 = "hy",
                            Name = "Armenian",
                            NativeName = "Հայերեն"
                        },
                        new
                        {
                            Code3 = "ibo",
                            Code2 = "ig",
                            Name = "Igbo",
                            NativeName = "Asụsụ Igbo"
                        },
                        new
                        {
                            Code3 = "ido",
                            Code2 = "io",
                            Name = "Ido",
                            NativeName = "Ido"
                        },
                        new
                        {
                            Code3 = "iii",
                            Code2 = "ii",
                            Name = "Nuosu",
                            NativeName = "ꆈꌠ꒿ Nuosuhxop"
                        },
                        new
                        {
                            Code3 = "iku",
                            Code2 = "iu",
                            Name = "Inuktitut",
                            NativeName = "ᐃᓄᒃᑎᑐᑦ"
                        },
                        new
                        {
                            Code3 = "ile",
                            Code2 = "ie",
                            Name = "Interlingue",
                            NativeName = "Originally called Occidental; then Interlingue after WWII"
                        },
                        new
                        {
                            Code3 = "ina",
                            Code2 = "ia",
                            Name = "Interlingua",
                            NativeName = "Interlingua"
                        },
                        new
                        {
                            Code3 = "ind",
                            Code2 = "id",
                            Name = "Indonesian",
                            NativeName = "Bahasa Indonesia"
                        },
                        new
                        {
                            Code3 = "ipk",
                            Code2 = "ik",
                            Name = "Inupiaq",
                            NativeName = "Iñupiaq, Iñupiatun"
                        },
                        new
                        {
                            Code3 = "isl",
                            Code2 = "is",
                            Name = "Icelandic",
                            NativeName = "Íslenska"
                        },
                        new
                        {
                            Code3 = "ita",
                            Code2 = "it",
                            Name = "Italian",
                            NativeName = "italiano"
                        },
                        new
                        {
                            Code3 = "jav",
                            Code2 = "jv",
                            Name = "Javanese",
                            NativeName = "basa Jawa"
                        },
                        new
                        {
                            Code3 = "jpn",
                            Code2 = "ja",
                            Name = "Japanese",
                            NativeName = "日本語 (にほんご)"
                        },
                        new
                        {
                            Code3 = "kal",
                            Code2 = "kl",
                            Name = "Kalaallisut, Greenlandic",
                            NativeName = "kalaallisut, kalaallit oqaasii"
                        },
                        new
                        {
                            Code3 = "kan",
                            Code2 = "kn",
                            Name = "Kannada",
                            NativeName = "ಕನ್ನಡ"
                        },
                        new
                        {
                            Code3 = "kas",
                            Code2 = "ks",
                            Name = "Kashmiri",
                            NativeName = "कश्मीरी, كشميري‎"
                        },
                        new
                        {
                            Code3 = "kat",
                            Code2 = "ka",
                            Name = "Georgian",
                            NativeName = "ქართული"
                        },
                        new
                        {
                            Code3 = "kau",
                            Code2 = "kr",
                            Name = "Kanuri",
                            NativeName = "Kanuri"
                        },
                        new
                        {
                            Code3 = "kaz",
                            Code2 = "kk",
                            Name = "Kazakh",
                            NativeName = "қазақ тілі"
                        },
                        new
                        {
                            Code3 = "khm",
                            Code2 = "km",
                            Name = "Khmer",
                            NativeName = "ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ"
                        },
                        new
                        {
                            Code3 = "kik",
                            Code2 = "ki",
                            Name = "Kikuyu, Gikuyu",
                            NativeName = "Gĩkũyũ"
                        },
                        new
                        {
                            Code3 = "kin",
                            Code2 = "rw",
                            Name = "Kinyarwanda",
                            NativeName = "Ikinyarwanda"
                        },
                        new
                        {
                            Code3 = "kir",
                            Code2 = "ky",
                            Name = "Kyrgyz",
                            NativeName = "Кыргызча, Кыргыз тили"
                        },
                        new
                        {
                            Code3 = "kom",
                            Code2 = "kv",
                            Name = "Komi",
                            NativeName = "коми кыв"
                        },
                        new
                        {
                            Code3 = "kon",
                            Code2 = "kg",
                            Name = "Kongo",
                            NativeName = "KiKongo"
                        },
                        new
                        {
                            Code3 = "kor",
                            Code2 = "ko",
                            Name = "Korean",
                            NativeName = "한국어 (韓國語), 조선어 (朝鮮語)"
                        },
                        new
                        {
                            Code3 = "kua",
                            Code2 = "kj",
                            Name = "Kwanyama, Kuanyama",
                            NativeName = "Kuanyama"
                        },
                        new
                        {
                            Code3 = "kur",
                            Code2 = "ku",
                            Name = "Kurdish",
                            NativeName = "Kurdî, كوردی‎"
                        },
                        new
                        {
                            Code3 = "lao",
                            Code2 = "lo",
                            Name = "Lao",
                            NativeName = "ພາສາລາວ"
                        },
                        new
                        {
                            Code3 = "lat",
                            Code2 = "la",
                            Name = "Latin",
                            NativeName = "latine, lingua latina"
                        },
                        new
                        {
                            Code3 = "lav",
                            Code2 = "lv",
                            Name = "Latvian",
                            NativeName = "latviešu valoda"
                        },
                        new
                        {
                            Code3 = "lim",
                            Code2 = "li",
                            Name = "Limburgish, Limburgan, Limburger",
                            NativeName = "Limburgs"
                        },
                        new
                        {
                            Code3 = "lin",
                            Code2 = "ln",
                            Name = "Lingala",
                            NativeName = "Lingála"
                        },
                        new
                        {
                            Code3 = "lit",
                            Code2 = "lt",
                            Name = "Lithuanian",
                            NativeName = "lietuvių kalba"
                        },
                        new
                        {
                            Code3 = "ltz",
                            Code2 = "lb",
                            Name = "Luxembourgish, Letzeburgesch",
                            NativeName = "Lëtzebuergesch"
                        },
                        new
                        {
                            Code3 = "lub",
                            Code2 = "lu",
                            Name = "Luba-Katanga",
                            NativeName = "Tshiluba"
                        },
                        new
                        {
                            Code3 = "lug",
                            Code2 = "lg",
                            Name = "Ganda",
                            NativeName = "Luganda"
                        },
                        new
                        {
                            Code3 = "mah",
                            Code2 = "mh",
                            Name = "Marshallese",
                            NativeName = "Kajin M̧ajeļ"
                        },
                        new
                        {
                            Code3 = "mal",
                            Code2 = "ml",
                            Name = "Malayalam",
                            NativeName = "മലയാളം"
                        },
                        new
                        {
                            Code3 = "mar",
                            Code2 = "mr",
                            Name = "Marathi (Marāṭhī)",
                            NativeName = "मराठी"
                        },
                        new
                        {
                            Code3 = "mkd",
                            Code2 = "mk",
                            Name = "Macedonian",
                            NativeName = "македонски јазик"
                        },
                        new
                        {
                            Code3 = "mlg",
                            Code2 = "mg",
                            Name = "Malagasy",
                            NativeName = "fiteny malagasy"
                        },
                        new
                        {
                            Code3 = "mlt",
                            Code2 = "mt",
                            Name = "Maltese",
                            NativeName = "Malti"
                        },
                        new
                        {
                            Code3 = "mon",
                            Code2 = "mn",
                            Name = "Mongolian",
                            NativeName = "монгол"
                        },
                        new
                        {
                            Code3 = "mri",
                            Code2 = "mi",
                            Name = "Māori",
                            NativeName = "te reo Māori"
                        },
                        new
                        {
                            Code3 = "msa",
                            Code2 = "ms",
                            Name = "Malay",
                            NativeName = "bahasa Melayu, بهاس ملايو‎"
                        },
                        new
                        {
                            Code3 = "mya",
                            Code2 = "my",
                            Name = "Burmese",
                            NativeName = "ဗမာစာ"
                        },
                        new
                        {
                            Code3 = "nau",
                            Code2 = "na",
                            Name = "Nauru",
                            NativeName = "Ekakairũ Naoero"
                        },
                        new
                        {
                            Code3 = "nav",
                            Code2 = "nv",
                            Name = "Navajo, Navaho",
                            NativeName = "Diné bizaad, Dinékʼehǰí"
                        },
                        new
                        {
                            Code3 = "nbl",
                            Code2 = "nr",
                            Name = "South Ndebele",
                            NativeName = "isiNdebele"
                        },
                        new
                        {
                            Code3 = "nde",
                            Code2 = "nd",
                            Name = "North Ndebele",
                            NativeName = "isiNdebele"
                        },
                        new
                        {
                            Code3 = "ndo",
                            Code2 = "ng",
                            Name = "Ndonga",
                            NativeName = "Owambo"
                        },
                        new
                        {
                            Code3 = "nep",
                            Code2 = "ne",
                            Name = "Nepali",
                            NativeName = "नेपाली"
                        },
                        new
                        {
                            Code3 = "nld",
                            Code2 = "nl",
                            Name = "Dutch",
                            NativeName = "Nederlands, Vlaams"
                        },
                        new
                        {
                            Code3 = "nno",
                            Code2 = "nn",
                            Name = "Norwegian Nynorsk",
                            NativeName = "Norsk nynorsk"
                        },
                        new
                        {
                            Code3 = "nob",
                            Code2 = "nb",
                            Name = "Norwegian Bokmål",
                            NativeName = "Norsk bokmål"
                        },
                        new
                        {
                            Code3 = "nor",
                            Code2 = "no",
                            Name = "Norwegian",
                            NativeName = "Norsk"
                        },
                        new
                        {
                            Code3 = "nya",
                            Code2 = "ny",
                            Name = "Chichewa; Chewa; Nyanja",
                            NativeName = "chiCheŵa, chinyanja"
                        },
                        new
                        {
                            Code3 = "oci",
                            Code2 = "oc",
                            Name = "Occitan",
                            NativeName = "occitan, lenga d'òc"
                        },
                        new
                        {
                            Code3 = "oji",
                            Code2 = "oj",
                            Name = "Ojibwe, Ojibwa",
                            NativeName = "ᐊᓂᔑᓈᐯᒧᐎᓐ"
                        },
                        new
                        {
                            Code3 = "ori",
                            Code2 = "or",
                            Name = "Oriya",
                            NativeName = "ଓଡ଼ିଆ"
                        },
                        new
                        {
                            Code3 = "orm",
                            Code2 = "om",
                            Name = "Oromo",
                            NativeName = "Afaan Oromoo"
                        },
                        new
                        {
                            Code3 = "oss",
                            Code2 = "os",
                            Name = "Ossetian, Ossetic",
                            NativeName = "ирон æвзаг"
                        },
                        new
                        {
                            Code3 = "pan",
                            Code2 = "pa",
                            Name = "Panjabi, Punjabi",
                            NativeName = "ਪੰਜਾਬੀ, پنجابی‎"
                        },
                        new
                        {
                            Code3 = "pli",
                            Code2 = "pi",
                            Name = "Pāli",
                            NativeName = "पाऴि"
                        },
                        new
                        {
                            Code3 = "pol",
                            Code2 = "pl",
                            Name = "Polish",
                            NativeName = "język polski, polszczyzna"
                        },
                        new
                        {
                            Code3 = "por",
                            Code2 = "pt",
                            Name = "Portuguese",
                            NativeName = "português"
                        },
                        new
                        {
                            Code3 = "pus",
                            Code2 = "ps",
                            Name = "Pashto, Pushto",
                            NativeName = "پښتو"
                        },
                        new
                        {
                            Code3 = "que",
                            Code2 = "qu",
                            Name = "Quechua",
                            NativeName = "Runa Simi, Kichwa"
                        },
                        new
                        {
                            Code3 = "roh",
                            Code2 = "rm",
                            Name = "Romansh",
                            NativeName = "rumantsch grischun"
                        },
                        new
                        {
                            Code3 = "ron",
                            Code2 = "ro",
                            Name = "Romanian",
                            NativeName = "limba română"
                        },
                        new
                        {
                            Code3 = "run",
                            Code2 = "rn",
                            Name = "Kirundi",
                            NativeName = "Ikirundi"
                        },
                        new
                        {
                            Code3 = "rus",
                            Code2 = "ru",
                            Name = "Russian",
                            NativeName = "русский язык"
                        },
                        new
                        {
                            Code3 = "sag",
                            Code2 = "sg",
                            Name = "Sango",
                            NativeName = "yângâ tî sängö"
                        },
                        new
                        {
                            Code3 = "san",
                            Code2 = "sa",
                            Name = "Sanskrit (Saṁskṛta)",
                            NativeName = "संस्कृतम्"
                        },
                        new
                        {
                            Code3 = "sin",
                            Code2 = "si",
                            Name = "Sinhala, Sinhalese",
                            NativeName = "සිංහල"
                        },
                        new
                        {
                            Code3 = "slk",
                            Code2 = "sk",
                            Name = "Slovak",
                            NativeName = "slovenčina, slovenský jazyk"
                        },
                        new
                        {
                            Code3 = "slv",
                            Code2 = "sl",
                            Name = "Slovene",
                            NativeName = "slovenski jezik, slovenščina"
                        },
                        new
                        {
                            Code3 = "sme",
                            Code2 = "se",
                            Name = "Northern Sami",
                            NativeName = "Davvisámegiella"
                        },
                        new
                        {
                            Code3 = "smo",
                            Code2 = "sm",
                            Name = "Samoan",
                            NativeName = "gagana fa'a Samoa"
                        },
                        new
                        {
                            Code3 = "sna",
                            Code2 = "sn",
                            Name = "Shona",
                            NativeName = "chiShona"
                        },
                        new
                        {
                            Code3 = "snd",
                            Code2 = "sd",
                            Name = "Sindhi",
                            NativeName = "सिन्धी, سنڌي، سندھی‎"
                        },
                        new
                        {
                            Code3 = "som",
                            Code2 = "so",
                            Name = "Somali",
                            NativeName = "Soomaaliga, af Soomaali"
                        },
                        new
                        {
                            Code3 = "sot",
                            Code2 = "st",
                            Name = "Southern Sotho",
                            NativeName = "Sesotho"
                        },
                        new
                        {
                            Code3 = "spa",
                            Code2 = "es",
                            Name = "Spanish; Castilian",
                            NativeName = "español, castellano"
                        },
                        new
                        {
                            Code3 = "sqi",
                            Code2 = "sq",
                            Name = "Albanian",
                            NativeName = "gjuha shqipe"
                        },
                        new
                        {
                            Code3 = "srd",
                            Code2 = "sc",
                            Name = "Sardinian",
                            NativeName = "sardu"
                        },
                        new
                        {
                            Code3 = "srp",
                            Code2 = "sr",
                            Name = "Serbian",
                            NativeName = "српски језик"
                        },
                        new
                        {
                            Code3 = "ssw",
                            Code2 = "ss",
                            Name = "Swati",
                            NativeName = "SiSwati"
                        },
                        new
                        {
                            Code3 = "sun",
                            Code2 = "su",
                            Name = "Sundanese",
                            NativeName = "Basa Sunda"
                        },
                        new
                        {
                            Code3 = "swa",
                            Code2 = "sw",
                            Name = "Swahili",
                            NativeName = "Kiswahili"
                        },
                        new
                        {
                            Code3 = "swe",
                            Code2 = "sv",
                            Name = "Swedish",
                            NativeName = "Svenska"
                        },
                        new
                        {
                            Code3 = "tah",
                            Code2 = "ty",
                            Name = "Tahitian",
                            NativeName = "Reo Tahiti"
                        },
                        new
                        {
                            Code3 = "tam",
                            Code2 = "ta",
                            Name = "Tamil",
                            NativeName = "தமிழ்"
                        },
                        new
                        {
                            Code3 = "tat",
                            Code2 = "tt",
                            Name = "Tatar",
                            NativeName = "татар теле, tatar tele"
                        },
                        new
                        {
                            Code3 = "tel",
                            Code2 = "te",
                            Name = "Telugu",
                            NativeName = "తెలుగు"
                        },
                        new
                        {
                            Code3 = "tgk",
                            Code2 = "tg",
                            Name = "Tajik",
                            NativeName = "тоҷикӣ, toğikī, تاجیکی‎"
                        },
                        new
                        {
                            Code3 = "tgl",
                            Code2 = "tl",
                            Name = "Tagalog",
                            NativeName = "Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔"
                        },
                        new
                        {
                            Code3 = "tha",
                            Code2 = "th",
                            Name = "Thai",
                            NativeName = "ไทย"
                        },
                        new
                        {
                            Code3 = "tir",
                            Code2 = "ti",
                            Name = "Tigrinya",
                            NativeName = "ትግርኛ"
                        },
                        new
                        {
                            Code3 = "ton",
                            Code2 = "to",
                            Name = "Tonga (Tonga Islands)",
                            NativeName = "faka Tonga"
                        },
                        new
                        {
                            Code3 = "tsn",
                            Code2 = "tn",
                            Name = "Tswana",
                            NativeName = "Setswana"
                        },
                        new
                        {
                            Code3 = "tso",
                            Code2 = "ts",
                            Name = "Tsonga",
                            NativeName = "Xitsonga"
                        },
                        new
                        {
                            Code3 = "tuk",
                            Code2 = "tk",
                            Name = "Turkmen",
                            NativeName = "Türkmen, Түркмен"
                        },
                        new
                        {
                            Code3 = "tur",
                            Code2 = "tr",
                            Name = "Turkish",
                            NativeName = "Türkçe"
                        },
                        new
                        {
                            Code3 = "twi",
                            Code2 = "tw",
                            Name = "Twi",
                            NativeName = "Twi"
                        },
                        new
                        {
                            Code3 = "uig",
                            Code2 = "ug",
                            Name = "Uyghur, Uighur",
                            NativeName = "Uyƣurqə, ئۇيغۇرچە‎"
                        },
                        new
                        {
                            Code3 = "ukr",
                            Code2 = "uk",
                            Name = "Ukrainian",
                            NativeName = "українська мова"
                        },
                        new
                        {
                            Code3 = "urd",
                            Code2 = "ur",
                            Name = "Urdu",
                            NativeName = "اردو"
                        },
                        new
                        {
                            Code3 = "uzb",
                            Code2 = "uz",
                            Name = "Uzbek",
                            NativeName = "O‘zbek, Ўзбек, أۇزبېك‎"
                        },
                        new
                        {
                            Code3 = "ven",
                            Code2 = "ve",
                            Name = "Venda",
                            NativeName = "Tshivenḓa"
                        },
                        new
                        {
                            Code3 = "vie",
                            Code2 = "vi",
                            Name = "Vietnamese",
                            NativeName = "Tiếng Việt"
                        },
                        new
                        {
                            Code3 = "vol",
                            Code2 = "vo",
                            Name = "Volapük",
                            NativeName = "Volapük"
                        },
                        new
                        {
                            Code3 = "wln",
                            Code2 = "wa",
                            Name = "Walloon",
                            NativeName = "walon"
                        },
                        new
                        {
                            Code3 = "wol",
                            Code2 = "wo",
                            Name = "Wolof",
                            NativeName = "Wollof"
                        },
                        new
                        {
                            Code3 = "xho",
                            Code2 = "xh",
                            Name = "Xhosa",
                            NativeName = "isiXhosa"
                        },
                        new
                        {
                            Code3 = "yid",
                            Code2 = "yi",
                            Name = "Yiddish",
                            NativeName = "ייִדיש"
                        },
                        new
                        {
                            Code3 = "yor",
                            Code2 = "yo",
                            Name = "Yoruba",
                            NativeName = "Yorùbá"
                        },
                        new
                        {
                            Code3 = "zha",
                            Code2 = "za",
                            Name = "Zhuang, Chuang",
                            NativeName = "Saɯ cueŋƅ, Saw cuengh"
                        },
                        new
                        {
                            Code3 = "zho",
                            Code2 = "zh",
                            Name = "Chinese",
                            NativeName = "中文 (Zhōngwén), 汉语, 漢語"
                        },
                        new
                        {
                            Code3 = "zul",
                            Code2 = "zu",
                            Name = "Zulu",
                            NativeName = "isiZulu"
                        });
                });

            modelBuilder.Entity("TemplateBase.Languages.Entities.LanguageCountry", b =>
                {
                    b.Property<string>("Iso2")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Code3")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Default")
                        .HasColumnType("bit");

                    b.HasKey("Iso2", "Code3");

                    b.HasIndex("Code3");

                    b.ToTable("LanguageCountry");

                    b.HasData(
                        new
                        {
                            Iso2 = "US",
                            Code3 = "eng",
                            Default = true
                        });
                });

            modelBuilder.Entity("TemplateBase.Timezones.Entities.Timezone", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name", "Code");

                    b.ToTable("Timezone");

                    b.HasData(
                        new
                        {
                            Name = "Australian Central Daylight Savings Time",
                            Code = "ACDT",
                            Value = "+10:30"
                        },
                        new
                        {
                            Name = "Australian Central Standard Time",
                            Code = "ACST",
                            Value = "+09:30"
                        },
                        new
                        {
                            Name = "Acre Time",
                            Code = "ACT",
                            Value = "-05"
                        },
                        new
                        {
                            Name = "ASEAN Common Time",
                            Code = "ACT",
                            Value = "+06:30 - +09"
                        },
                        new
                        {
                            Name = "Atlantic Daylight Time",
                            Code = "ADT",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Australian Eastern Daylight Savings Time",
                            Code = "AEDT",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Australian Eastern Standard Time",
                            Code = "AEST",
                            Value = "+10"
                        },
                        new
                        {
                            Name = "Afghanistan Time",
                            Code = "AFT",
                            Value = "+04:30"
                        },
                        new
                        {
                            Name = "Alaska Daylight Time",
                            Code = "AKDT",
                            Value = "-08"
                        },
                        new
                        {
                            Name = "Alaska Standard Time",
                            Code = "AKST",
                            Value = "-09"
                        },
                        new
                        {
                            Name = "Amazon Summer Time (Brazil)[1]",
                            Code = "AMST",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Amazon Time (Brazil)[2]",
                            Code = "AMT",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Armenia Time",
                            Code = "AMT",
                            Value = "+04"
                        },
                        new
                        {
                            Name = "Argentina Time",
                            Code = "ART",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Arabia Standard Time",
                            Code = "AST",
                            Value = "+03"
                        },
                        new
                        {
                            Name = "Atlantic Standard Time",
                            Code = "AST",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Australian Western Standard Time",
                            Code = "AWST",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Azores Summer Time",
                            Code = "AZOST",
                            Value = "±00"
                        },
                        new
                        {
                            Name = "Azores Standard Time",
                            Code = "AZOT",
                            Value = "-01"
                        },
                        new
                        {
                            Name = "Azerbaijan Time",
                            Code = "AZT",
                            Value = "+04"
                        },
                        new
                        {
                            Name = "Brunei Time",
                            Code = "BDT",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "British Indian Ocean Time",
                            Code = "BIOT",
                            Value = "+06"
                        },
                        new
                        {
                            Name = "Baker Island Time",
                            Code = "BIT",
                            Value = "-12"
                        },
                        new
                        {
                            Name = "Bolivia Time",
                            Code = "BOT",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Brasilia Summer Time",
                            Code = "BRST",
                            Value = "-02"
                        },
                        new
                        {
                            Name = "Brasilia Time",
                            Code = "BRT",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Bangladesh Standard Time",
                            Code = "BST",
                            Value = "+06"
                        },
                        new
                        {
                            Name = "Bougainville Standard Time[3]",
                            Code = "BST",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "British Summer Time (British Standard Time from Feb 1968 to Oct 1971)",
                            Code = "BST",
                            Value = "+01"
                        },
                        new
                        {
                            Name = "Bhutan Time",
                            Code = "BTT",
                            Value = "+06"
                        },
                        new
                        {
                            Name = "Central Africa Time",
                            Code = "CAT",
                            Value = "+02"
                        },
                        new
                        {
                            Name = "Cocos Islands Time",
                            Code = "CCT",
                            Value = "+06:30"
                        },
                        new
                        {
                            Name = "Central Daylight Time (North America)",
                            Code = "CDT",
                            Value = "-05"
                        },
                        new
                        {
                            Name = "Cuba Daylight Time[4]",
                            Code = "CDT",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Central European Summer Time (Cf. HAEC)",
                            Code = "CEST",
                            Value = "+02"
                        },
                        new
                        {
                            Name = "Central European Time",
                            Code = "CET",
                            Value = "+01"
                        },
                        new
                        {
                            Name = "Chatham Daylight Time",
                            Code = "CHADT",
                            Value = "+13:45"
                        },
                        new
                        {
                            Name = "Chatham Standard Time",
                            Code = "CHAST",
                            Value = "+12:45"
                        },
                        new
                        {
                            Name = "Choibalsan Standard Time",
                            Code = "CHOT",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Choibalsan Summer Time",
                            Code = "CHOST",
                            Value = "+09"
                        },
                        new
                        {
                            Name = "Chamorro Standard Time",
                            Code = "CHST",
                            Value = "+10"
                        },
                        new
                        {
                            Name = "Chuuk Time",
                            Code = "CHUT",
                            Value = "+10"
                        },
                        new
                        {
                            Name = "Clipperton Island Standard Time",
                            Code = "CIST",
                            Value = "-08"
                        },
                        new
                        {
                            Name = "Central Indonesia Time",
                            Code = "CIT",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Cook Island Time",
                            Code = "CKT",
                            Value = "-10"
                        },
                        new
                        {
                            Name = "Chile Summer Time",
                            Code = "CLST",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Chile Standard Time",
                            Code = "CLT",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Colombia Summer Time",
                            Code = "COST",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Colombia Time",
                            Code = "COT",
                            Value = "-05"
                        },
                        new
                        {
                            Name = "Central Standard Time (North America)",
                            Code = "CST",
                            Value = "-06"
                        },
                        new
                        {
                            Name = "China Standard Time",
                            Code = "CST",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Central Standard Time (Australia)",
                            Code = "ACST",
                            Value = "+09:30"
                        },
                        new
                        {
                            Name = "Central Summer Time (Australia)",
                            Code = "ACDT",
                            Value = "+10:30"
                        },
                        new
                        {
                            Name = "Cuba Standard Time",
                            Code = "CST",
                            Value = "-05"
                        },
                        new
                        {
                            Name = "China time",
                            Code = "CT",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Cape Verde Time",
                            Code = "CVT",
                            Value = "-01"
                        },
                        new
                        {
                            Name = "Central Western Standard Time (Australia) unofficial",
                            Code = "CWST",
                            Value = "+08:45"
                        },
                        new
                        {
                            Name = "Christmas Island Time",
                            Code = "CXT",
                            Value = "+07"
                        },
                        new
                        {
                            Name = "Davis Time",
                            Code = "DAVT",
                            Value = "+07"
                        },
                        new
                        {
                            Name = "Dumont d'Urville Time",
                            Code = "DDUT",
                            Value = "+10"
                        },
                        new
                        {
                            Name = "AIX specific equivalent of Central European Time[5]",
                            Code = "DFT",
                            Value = "+01"
                        },
                        new
                        {
                            Name = "Easter Island Summer Time",
                            Code = "EASST",
                            Value = "-05"
                        },
                        new
                        {
                            Name = "Easter Island Standard Time",
                            Code = "EAST",
                            Value = "-06"
                        },
                        new
                        {
                            Name = "East Africa Time",
                            Code = "EAT",
                            Value = "+03"
                        },
                        new
                        {
                            Name = "Eastern Caribbean Time (does not recognise DST)",
                            Code = "ECT",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Ecuador Time",
                            Code = "ECT",
                            Value = "-05"
                        },
                        new
                        {
                            Name = "Eastern Daylight Time (North America)",
                            Code = "EDT",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Eastern Summer Time (Australia)",
                            Code = "AEDT",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Eastern European Summer Time",
                            Code = "EEST",
                            Value = "+03"
                        },
                        new
                        {
                            Name = "Eastern European Time",
                            Code = "EET",
                            Value = "+02"
                        },
                        new
                        {
                            Name = "Eastern Greenland Summer Time",
                            Code = "EGST",
                            Value = "±00"
                        },
                        new
                        {
                            Name = "Eastern Greenland Time",
                            Code = "EGT",
                            Value = "-01"
                        },
                        new
                        {
                            Name = "Eastern Indonesian Time",
                            Code = "EIT",
                            Value = "+09"
                        },
                        new
                        {
                            Name = "Eastern Standard Time (North America)",
                            Code = "EST",
                            Value = "-05"
                        },
                        new
                        {
                            Name = "Eastern Standard Time (Australia)",
                            Code = "AEST",
                            Value = "+10"
                        },
                        new
                        {
                            Name = "Further-eastern European Time",
                            Code = "FET",
                            Value = "+03"
                        },
                        new
                        {
                            Name = "Fiji Time",
                            Code = "FJT",
                            Value = "+12"
                        },
                        new
                        {
                            Name = "Falkland Islands Summer Time",
                            Code = "FKST",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Falkland Islands Time",
                            Code = "FKT",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Fernando de Noronha Time",
                            Code = "FNT",
                            Value = "-02"
                        },
                        new
                        {
                            Name = "Galapagos Time",
                            Code = "GALT",
                            Value = "-06"
                        },
                        new
                        {
                            Name = "Gambier Islands",
                            Code = "GAMT",
                            Value = "-09"
                        },
                        new
                        {
                            Name = "Georgia Standard Time",
                            Code = "GET",
                            Value = "+04"
                        },
                        new
                        {
                            Name = "French Guiana Time",
                            Code = "GFT",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Gilbert Island Time",
                            Code = "GILT",
                            Value = "+12"
                        },
                        new
                        {
                            Name = "Gambier Island Time",
                            Code = "GIT",
                            Value = "-09"
                        },
                        new
                        {
                            Name = "Greenwich Mean Time",
                            Code = "GMT",
                            Value = "±00"
                        },
                        new
                        {
                            Name = "South Georgia and the South Sandwich Islands",
                            Code = "GST",
                            Value = "-02"
                        },
                        new
                        {
                            Name = "Gulf Standard Time",
                            Code = "GST",
                            Value = "+04"
                        },
                        new
                        {
                            Name = "Guyana Time",
                            Code = "GYT",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Hawaii-Aleutian Daylight Time",
                            Code = "HADT",
                            Value = "-09"
                        },
                        new
                        {
                            Name = "Heure Avancée d'Europe Centrale francised name for CEST",
                            Code = "HAEC",
                            Value = "+02"
                        },
                        new
                        {
                            Name = "Hawaii-Aleutian Standard Time",
                            Code = "HAST",
                            Value = "-10"
                        },
                        new
                        {
                            Name = "Hong Kong Time",
                            Code = "HKT",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Heard and McDonald Islands Time",
                            Code = "HMT",
                            Value = "+05"
                        },
                        new
                        {
                            Name = "Khovd Summer Time",
                            Code = "HOVST",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Khovd Standard Time",
                            Code = "HOVT",
                            Value = "+07"
                        },
                        new
                        {
                            Name = "Indochina Time",
                            Code = "ICT",
                            Value = "+07"
                        },
                        new
                        {
                            Name = "Israel Daylight Time",
                            Code = "IDT",
                            Value = "+03"
                        },
                        new
                        {
                            Name = "Indian Ocean Time",
                            Code = "IOT",
                            Value = "+03"
                        },
                        new
                        {
                            Name = "Iran Daylight Time",
                            Code = "IRDT",
                            Value = "+04:30"
                        },
                        new
                        {
                            Name = "Irkutsk Time",
                            Code = "IRKT",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Iran Standard Time",
                            Code = "IRST",
                            Value = "+03:30"
                        },
                        new
                        {
                            Name = "Indian Standard Time",
                            Code = "IST",
                            Value = "+05:30"
                        },
                        new
                        {
                            Name = "Irish Standard Time[6]",
                            Code = "IST",
                            Value = "+01"
                        },
                        new
                        {
                            Name = "Israel Standard Time",
                            Code = "IST",
                            Value = "+02"
                        },
                        new
                        {
                            Name = "Japan Standard Time",
                            Code = "JST",
                            Value = "+09"
                        },
                        new
                        {
                            Name = "Kyrgyzstan time",
                            Code = "KGT",
                            Value = "+06"
                        },
                        new
                        {
                            Name = "Kosrae Time",
                            Code = "KOST",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Krasnoyarsk Time",
                            Code = "KRAT",
                            Value = "+07"
                        },
                        new
                        {
                            Name = "Korea Standard Time",
                            Code = "KST",
                            Value = "+09"
                        },
                        new
                        {
                            Name = "Lord Howe Standard Time",
                            Code = "LHST",
                            Value = "+10:30"
                        },
                        new
                        {
                            Name = "Lord Howe Summer Time",
                            Code = "LHST",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Line Islands Time",
                            Code = "LINT",
                            Value = "+14"
                        },
                        new
                        {
                            Name = "Magadan Time",
                            Code = "MAGT",
                            Value = "+12"
                        },
                        new
                        {
                            Name = "Marquesas Islands Time",
                            Code = "MART",
                            Value = "-09:30"
                        },
                        new
                        {
                            Name = "Mawson Station Time",
                            Code = "MAWT",
                            Value = "+05"
                        },
                        new
                        {
                            Name = "Mountain Daylight Time (North America)",
                            Code = "MDT",
                            Value = "-06"
                        },
                        new
                        {
                            Name = "Middle European Time Same zone as CET",
                            Code = "MET",
                            Value = "+01"
                        },
                        new
                        {
                            Name = "Middle European Summer Time Same zone as CEST",
                            Code = "MEST",
                            Value = "+02"
                        },
                        new
                        {
                            Name = "Marshall Islands",
                            Code = "MHT",
                            Value = "+12"
                        },
                        new
                        {
                            Name = "Macquarie Island Station Time",
                            Code = "MIST",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Marquesas Islands Time",
                            Code = "MIT",
                            Value = "-09:30"
                        },
                        new
                        {
                            Name = "Myanmar Standard Time",
                            Code = "MMT",
                            Value = "+06:30"
                        },
                        new
                        {
                            Name = "Moscow Time",
                            Code = "MSK",
                            Value = "+03"
                        },
                        new
                        {
                            Name = "Malaysia Standard Time",
                            Code = "MST",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Mountain Standard Time (North America)",
                            Code = "MST",
                            Value = "-07"
                        },
                        new
                        {
                            Name = "Mauritius Time",
                            Code = "MUT",
                            Value = "+04"
                        },
                        new
                        {
                            Name = "Maldives Time",
                            Code = "MVT",
                            Value = "+05"
                        },
                        new
                        {
                            Name = "Malaysia Time",
                            Code = "MYT",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "New Caledonia Time",
                            Code = "NCT",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Newfoundland Daylight Time",
                            Code = "NDT",
                            Value = "-02:30"
                        },
                        new
                        {
                            Name = "Norfolk Time",
                            Code = "NFT",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Nepal Time",
                            Code = "NPT",
                            Value = "+05:45"
                        },
                        new
                        {
                            Name = "Newfoundland Standard Time",
                            Code = "NST",
                            Value = "-03:30"
                        },
                        new
                        {
                            Name = "Newfoundland Time",
                            Code = "NT",
                            Value = "-03:30"
                        },
                        new
                        {
                            Name = "Niue Time",
                            Code = "NUT",
                            Value = "-11"
                        },
                        new
                        {
                            Name = "New Zealand Daylight Time",
                            Code = "NZDT",
                            Value = "+13"
                        },
                        new
                        {
                            Name = "New Zealand Standard Time",
                            Code = "NZST",
                            Value = "+12"
                        },
                        new
                        {
                            Name = "Omsk Time",
                            Code = "OMST",
                            Value = "+06"
                        },
                        new
                        {
                            Name = "Oral Time",
                            Code = "ORAT",
                            Value = "+05"
                        },
                        new
                        {
                            Name = "Pacific Daylight Time (North America)",
                            Code = "PDT",
                            Value = "-07"
                        },
                        new
                        {
                            Name = "Peru Time",
                            Code = "PET",
                            Value = "-05"
                        },
                        new
                        {
                            Name = "Kamchatka Time",
                            Code = "PETT",
                            Value = "+12"
                        },
                        new
                        {
                            Name = "Papua New Guinea Time",
                            Code = "PGT",
                            Value = "+10"
                        },
                        new
                        {
                            Name = "Phoenix Island Time",
                            Code = "PHOT",
                            Value = "+13"
                        },
                        new
                        {
                            Name = "Philippine Time",
                            Code = "PHT",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Pakistan Standard Time",
                            Code = "PKT",
                            Value = "+05"
                        },
                        new
                        {
                            Name = "Saint Pierre and Miquelon Daylight time",
                            Code = "PMDT",
                            Value = "-02"
                        },
                        new
                        {
                            Name = "Saint Pierre and Miquelon Standard Time",
                            Code = "PMST",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Pohnpei Standard Time",
                            Code = "PONT",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Pacific Standard Time (North America)",
                            Code = "PST",
                            Value = "-08"
                        },
                        new
                        {
                            Name = "Philippine Standard Time",
                            Code = "PST",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Paraguay Summer Time (South America)[7]",
                            Code = "PYST",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Paraguay Time (South America)[8]",
                            Code = "PYT",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Réunion Time",
                            Code = "RET",
                            Value = "+04"
                        },
                        new
                        {
                            Name = "Rothera Research Station Time",
                            Code = "ROTT",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Sakhalin Island time",
                            Code = "SAKT",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Samara Time",
                            Code = "SAMT",
                            Value = "+04"
                        },
                        new
                        {
                            Name = "South African Standard Time",
                            Code = "SAST",
                            Value = "+02"
                        },
                        new
                        {
                            Name = "Solomon Islands Time",
                            Code = "SBT",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Seychelles Time",
                            Code = "SCT",
                            Value = "+04"
                        },
                        new
                        {
                            Name = "Singapore Time",
                            Code = "SGT",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Sri Lanka Standard Time",
                            Code = "SLST",
                            Value = "+05:30"
                        },
                        new
                        {
                            Name = "Srednekolymsk Time",
                            Code = "SRET",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Suriname Time",
                            Code = "SRT",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Samoa Standard Time",
                            Code = "SST",
                            Value = "-11"
                        },
                        new
                        {
                            Name = "Singapore Standard Time",
                            Code = "SST",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Showa Station Time",
                            Code = "SYOT",
                            Value = "+03"
                        },
                        new
                        {
                            Name = "Tahiti Time",
                            Code = "TAHT",
                            Value = "-10"
                        },
                        new
                        {
                            Name = "Thailand Standard Time",
                            Code = "THA",
                            Value = "+07"
                        },
                        new
                        {
                            Name = "Indian/Kerguelen",
                            Code = "TFT",
                            Value = "+05"
                        },
                        new
                        {
                            Name = "Tajikistan Time",
                            Code = "TJT",
                            Value = "+05"
                        },
                        new
                        {
                            Name = "Tokelau Time",
                            Code = "TKT",
                            Value = "+13"
                        },
                        new
                        {
                            Name = "Timor Leste Time",
                            Code = "TLT",
                            Value = "+09"
                        },
                        new
                        {
                            Name = "Turkmenistan Time",
                            Code = "TMT",
                            Value = "+05"
                        },
                        new
                        {
                            Name = "Turkey Time",
                            Code = "TRT",
                            Value = "+03"
                        },
                        new
                        {
                            Name = "Tonga Time",
                            Code = "TOT",
                            Value = "+13"
                        },
                        new
                        {
                            Name = "Tuvalu Time",
                            Code = "TVT",
                            Value = "+12"
                        },
                        new
                        {
                            Name = "Ulaanbaatar Summer Time",
                            Code = "ULAST",
                            Value = "+09"
                        },
                        new
                        {
                            Name = "Ulaanbaatar Standard Time",
                            Code = "ULAT",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Kaliningrad Time",
                            Code = "USZ1",
                            Value = "+02"
                        },
                        new
                        {
                            Name = "Coordinated Universal Time",
                            Code = "",
                            Value = "±00"
                        },
                        new
                        {
                            Name = "Uruguay Summer Time",
                            Code = "UYST",
                            Value = "-02"
                        },
                        new
                        {
                            Name = "Uruguay Standard Time",
                            Code = "UYT",
                            Value = "-03"
                        },
                        new
                        {
                            Name = "Uzbekistan Time",
                            Code = "UZT",
                            Value = "+05"
                        },
                        new
                        {
                            Name = "Venezuelan Standard Time",
                            Code = "VET",
                            Value = "-04"
                        },
                        new
                        {
                            Name = "Vladivostok Time",
                            Code = "VLAT",
                            Value = "+10"
                        },
                        new
                        {
                            Name = "Volgograd Time",
                            Code = "VOLT",
                            Value = "+04"
                        },
                        new
                        {
                            Name = "Vostok Station Time",
                            Code = "VOST",
                            Value = "+06"
                        },
                        new
                        {
                            Name = "Vanuatu Time",
                            Code = "VUT",
                            Value = "+11"
                        },
                        new
                        {
                            Name = "Wake Island Time",
                            Code = "WAKT",
                            Value = "+12"
                        },
                        new
                        {
                            Name = "West Africa Summer Time",
                            Code = "WAST",
                            Value = "+02"
                        },
                        new
                        {
                            Name = "West Africa Time",
                            Code = "WAT",
                            Value = "+01"
                        },
                        new
                        {
                            Name = "Western European Summer Time",
                            Code = "WEST",
                            Value = "+01"
                        },
                        new
                        {
                            Name = "Western European Time",
                            Code = "WET",
                            Value = "±00"
                        },
                        new
                        {
                            Name = "Western Indonesian Time",
                            Code = "WIT",
                            Value = "+07"
                        },
                        new
                        {
                            Name = "Western Standard Time",
                            Code = "WST",
                            Value = "+08"
                        },
                        new
                        {
                            Name = "Yakutsk Time",
                            Code = "YAKT",
                            Value = "+09"
                        },
                        new
                        {
                            Name = "Yekaterinburg Time",
                            Code = "YEKT",
                            Value = "+05"
                        });
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "20f1b6e7-64b7-4658-9f5a-ca9b73da374e",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "20f1b6e7-64b7-4658-9f5a-ca9b73da374e",
                            Name = "member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim");
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "20f1b6e7-64b7-4658-9f5a-ca9b73da374e",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            FirstName = "Rod",
                            LastName = "Johnson",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@ADMIN.COM",
                            NormalizedUserName = "ADMIN@ADMIN.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIVVeEi6VZ2YB3JUwyExMUFOL9E6rS4Px8AHXK0osa6ncEsGkS0mFtBesBmGurNFuA==",
                            PhoneNumber = "123-123-1234",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        });
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.UserLogin", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "ProviderKey", "LoginProvider");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiResourceClaim", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.ApiResource", "ApiResource")
                        .WithMany("UserClaims")
                        .HasForeignKey("ApiResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiResource");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiResourceProperty", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.ApiResource", "ApiResource")
                        .WithMany("Properties")
                        .HasForeignKey("ApiResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiResource");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiResourceScope", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.ApiResource", "ApiResource")
                        .WithMany("Scopes")
                        .HasForeignKey("ApiResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiResource");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiResourceSecret", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.ApiResource", "ApiResource")
                        .WithMany("Secrets")
                        .HasForeignKey("ApiResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiResource");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiScopeClaim", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.ApiScope", "Scope")
                        .WithMany("UserClaims")
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiScopeProperty", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.ApiScope", "Scope")
                        .WithMany("Properties")
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientClaim", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.Client", "Client")
                        .WithMany("Claims")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientCorsOrigin", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.Client", "Client")
                        .WithMany("AllowedCorsOrigins")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientGrantType", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.Client", "Client")
                        .WithMany("AllowedGrantTypes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientIdPRestriction", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.Client", "Client")
                        .WithMany("IdentityProviderRestrictions")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientPostLogoutRedirectUri", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.Client", "Client")
                        .WithMany("PostLogoutRedirectUris")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientProperty", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.Client", "Client")
                        .WithMany("Properties")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientRedirectUri", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.Client", "Client")
                        .WithMany("RedirectUris")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientScope", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.Client", "Client")
                        .WithMany("AllowedScopes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ClientSecret", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.Client", "Client")
                        .WithMany("ClientSecrets")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.IdentityResourceClaim", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.IdentityResource", "IdentityResource")
                        .WithMany("UserClaims")
                        .HasForeignKey("IdentityResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityResource");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.IdentityResourceProperty", b =>
                {
                    b.HasOne("IdentityServer4.EntityFramework.Entities.IdentityResource", "IdentityResource")
                        .WithMany("Properties")
                        .HasForeignKey("IdentityResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityResource");
                });

            modelBuilder.Entity("TemplateBase.Geography.Entities.EnabledCountry", b =>
                {
                    b.HasOne("TemplateBase.Geography.Entities.Country", "Country")
                        .WithOne("EnabledCountry")
                        .HasForeignKey("TemplateBase.Geography.Entities.EnabledCountry", "Iso2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("TemplateBase.Geography.Entities.StateProvince", b =>
                {
                    b.HasOne("TemplateBase.Geography.Entities.Country", "Country")
                        .WithMany("StateProvinces")
                        .HasForeignKey("Iso2");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("TemplateBase.Languages.Entities.LanguageCountry", b =>
                {
                    b.HasOne("TemplateBase.Languages.Entities.Language", "Language")
                        .WithMany("Countries")
                        .HasForeignKey("Code3")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TemplateBase.Geography.Entities.Country", "Country")
                        .WithMany("Languages")
                        .HasForeignKey("Iso2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.RoleClaim", b =>
                {
                    b.HasOne("TemplateBase.Users.Entities.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.UserClaim", b =>
                {
                    b.HasOne("TemplateBase.Users.Entities.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.UserLogin", b =>
                {
                    b.HasOne("TemplateBase.Users.Entities.User", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.UserRole", b =>
                {
                    b.HasOne("TemplateBase.Users.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TemplateBase.Users.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.UserToken", b =>
                {
                    b.HasOne("TemplateBase.Users.Entities.User", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiResource", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("Scopes");

                    b.Navigation("Secrets");

                    b.Navigation("UserClaims");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.ApiScope", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("UserClaims");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.Client", b =>
                {
                    b.Navigation("AllowedCorsOrigins");

                    b.Navigation("AllowedGrantTypes");

                    b.Navigation("AllowedScopes");

                    b.Navigation("Claims");

                    b.Navigation("ClientSecrets");

                    b.Navigation("IdentityProviderRestrictions");

                    b.Navigation("PostLogoutRedirectUris");

                    b.Navigation("Properties");

                    b.Navigation("RedirectUris");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.IdentityResource", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("UserClaims");
                });

            modelBuilder.Entity("TemplateBase.Geography.Entities.Country", b =>
                {
                    b.Navigation("EnabledCountry");

                    b.Navigation("Languages");

                    b.Navigation("StateProvinces");
                });

            modelBuilder.Entity("TemplateBase.Languages.Entities.Language", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("TemplateBase.Users.Entities.User", b =>
                {
                    b.Navigation("UserClaims");

                    b.Navigation("UserLogins");

                    b.Navigation("UserRoles");

                    b.Navigation("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
